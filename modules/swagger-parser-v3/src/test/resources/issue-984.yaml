openapi: 3.0.0
info:
  description: Data Control Structure (DCS) Api provides concept related services
  version: "1.0"
  title: Data Control Structure (DCS) Api
tags:
  - name: applicationnumber
  - name: btb
  - name: basicentitlement
  - name: closedusergroup
  - name: compositeentitlement
  - name: concepthistory
  - name: concept
  - name: ContextRestService
  - name: context
  - name: communication
  - name: entitlementassignment
  - name: entitlementmaker
  - name: entitlementregistration
  - name: handler
  - name: identity
  - name: notificationtemplate
  - name: notification
  - name: organisationtypeassignment
  - name: organisationtype
  - name: organisation
  - name: property
  - name: provisioning
  - name: proxyconfig
  - name: public
  - name: scheduling
  - name: selfrequest
  - name: settings
  - name: systemproperty
  - name: tagcluster
  - name: tag
  - name: targetsystem
  - name: translation
  - name: virtualidentity
  - name: workrelation
  - name: workflow
  - name: entitlementdto
  - name: person
  - name: workrelationdto
  - name: password
  - name: provisioningConfiguration
paths:
  "/applicationnumber/{applicationId}":
    get:
      tags:
        - applicationnumber
      summary: Search applicationNumber
      description: Find the applicationNumber  (only Active)
      operationId: getById
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNumber"
      security:
        - WebIDM-Access-Token:
            []
  /applicationnumber/bulk:
    put:
      tags:
        - applicationnumber
      summary: Save the applicationNumber
      description: This method will persist the given applicationNumber
      operationId: saveApplicationNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationNumberWrapper"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ApplicationNumber"
      security:
        - WebIDM-Access-Token:
            []
  /applicationnumber:
    get:
      tags:
        - applicationnumber
      summary: Search applicationNumber
      description: "Find all the applicationNumbers   "
      operationId: getAllApplicationNumbers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApplicationNumber"
      security:
        - WebIDM-Access-Token:
            []
  /btb/approvers:
    get:
      tags:
        - btb
      summary: Looks up BTB service to find representatives (approvers) for given
        organisation code and domain
      description: This method will return the list of approvers and co-approvers
      operationId: getOrgApprovers
      parameters:
        - name: orgCode
          in: query
          required: true
          schema:
            type: string
        - name: domain
          in: query
          required: false
          schema:
            type: string
        - name: uuidRequester
          in: query
          required: false
          schema:
            type: string
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityRepresentative"
      security:
        - WebIDM-Access-Token:
            []
  /btb/representativeRoles:
    get:
      tags:
        - btb
      summary: "Looks up BTB service to find the roles of representatives (approvers)
        by isnn and domain "
      description: This method will return the list of roles
      operationId: getRepresentativeRoles
      parameters:
        - name: inss
          in: query
          required: true
          schema:
            type: string
        - name: domain
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityRole"
      security:
        - WebIDM-Access-Token:
            []
  /basicentitlement:
    get:
      tags:
        - basicentitlement
      summary: Looks up Basic Entitlement by name
      description: Returns the Basic Entitlement when found.
      operationId: getBasicEntitlementByName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicEntitlement"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - basicentitlement
      summary: Save the Basic Entitlement
      description: This method will persist the given Basic Entitlement
      operationId: create
      requestBody:
        $ref: "#/components/requestBodies/BasicEntitlement"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  "/basicentitlement/{uuid}":
    get:
      tags:
        - basicentitlement
      summary: Looks up Basic Entitlement id
      description: Returns the Basic Entitlement when found.
      operationId: getBasicEntitlement
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicEntitlement"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - basicentitlement
      summary: Updates the Basic Entitlement
      description: This method will update the given Basic Entitlement
      operationId: update
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BasicEntitlement"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicEntitlement"
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - basicentitlement
      summary: Delete Basic Entitlement
      description: This method will archive the given Basic Entitlement object.
      operationId: delete
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/basicentitlement/findByCompositeEntitlement/{uuid}":
    get:
      tags:
        - basicentitlement
      summary: Looks up Basic Entitlements based on composite entitlement uuid
      description: Returns the Basic Entitlements when found.
      operationId: getBasicEntitlementsForCompositeEntitlement
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BasicEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  "/closedusergroup/{uuid}":
    get:
      tags:
        - closedusergroup
      summary: Looks up ClosedUserGroup
      description: This method will return the closedUserGroup with the given uuid
      operationId: getClosedUserGroup
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClosedUserGroup"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - closedusergroup
      summary: Updates the closedUserGroup
      description: This method will update the given closedUserGroup
      operationId: updateCug
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ClosedUserGroup"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClosedUserGroup"
      security:
        - WebIDM-Access-Token:
            []
  /closedusergroup:
    get:
      tags:
        - closedusergroup
      summary: Search for closedUserGroups
      description: This method will return a list off all closedUserGroups
      operationId: getClosedUserGroups
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClosedUserGroup"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - closedusergroup
      summary: Save the closed usergroup
      description: This method will create the closed user group
      operationId: saveCug
      requestBody:
        $ref: "#/components/requestBodies/ClosedUserGroup"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClosedUserGroup"
      security:
        - WebIDM-Access-Token:
            []
  "/compositeentitlement/{uuid}":
    get:
      tags:
        - compositeentitlement
      summary: Looks up composite entitlement
      description: This method will return the composite entitlement with the given uuid
      operationId: getCompositeEntitlement
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - compositeentitlement
      summary: Updates the Composite Entitlement
      description: This method will update the given composite entitlement
      operationId: updateCompositeEntitlement
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CompositeEntitlement"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - compositeentitlement
      summary: Delete Composite Entitlement
      description: This method will archive the given Composite Entitlement object.
      operationId: deleteCompositeEntitlement
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/compositeentitlement/applicationNumber/{applicationNumber}":
    get:
      tags:
        - compositeentitlement
      summary: Fetches all composite entitlements for given application number
      description: This method will return the composite entitlements with the given
        application number
      operationId: findCompositeEntitlementsByApplicationNumber
      parameters:
        - name: applicationNumber
          in: path
          required: true
          schema:
            type: string
        - name: selfrequestableOnly
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightCompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  "/compositeentitlement/entitlementCode/{entitlementCode}":
    get:
      tags:
        - compositeentitlement
      summary: Fetches all composite entitlements for given entitlement code
      description: This method will return the composite entitlements with the given
        entitlement code
      operationId: findCompositeEntitlementsByEntitlementCode
      parameters:
        - name: entitlementCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  "/compositeentitlement/basicentitlement/{wuuid}":
    get:
      tags:
        - compositeentitlement
      summary: Fetches all composite entitlements which have assigned given basic
        entitlement
      description: This method will return the composite entitlements having given Basic
        Entitlement linked
      operationId: findCompositeEntitlementsByBasicEntitlementWuuid
      parameters:
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  /compositeentitlement/selfrequestable:
    get:
      tags:
        - compositeentitlement
      summary: Fetches all composite entitlements which have assigned property named
        selfrequestable with a true value
      description: This method will return the composite entitlements having assigned
        property named selfrequestable with a true value
      operationId: findSelfRequestableEntitlements
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  /compositeentitlement:
    get:
      tags:
        - compositeentitlement
      summary: Search for composite entitlements by cug code or workrelation id
      description: This method will returns a list of all composite entitlements matching
        the specified cug or workrelation
      operationId: getCompositeEntitlements
      parameters:
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
        - name: workRelationUuid
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - compositeentitlement
      summary: Save the composite entitlement
      description: This method will create the given composite entitlement
      operationId: createCompositeEntitlement
      requestBody:
        $ref: "#/components/requestBodies/CompositeEntitlement"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  /compositeentitlement/light:
    get:
      tags:
        - compositeentitlement
      summary: Search for composite entitlements by cug code or workrelation id
      description: This method will returns a list of all composite entitlements matching
        the specified cug or workrelation
      operationId: getLightCompositeEntitlements
      parameters:
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
        - name: workRelationUuid
          in: query
          required: false
          schema:
            type: string
        - name: selfrequestableOnly
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightCompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  /compositeentitlement/getCompositeEntitlementsFilteredWithPrerequisites:
    get:
      tags:
        - compositeentitlement
      summary: Search for composite entitlements by cug code and filteres them with the
        one which are valid for given workrelationUuid
      description: This method will returns a list of all composite entitlements matching
        the specified cug and  prerequisites for given workrelation
      operationId: getCompositeEntitlementsFilteredWithPrerequisites
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: workRelationUuid
          in: query
          required: true
          schema:
            type: string
        - name: selfrequestableOnly
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightCompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  /compositeentitlement/getCompositeEntitlementsFilteredWithOrganisationPrerequisites:
    get:
      tags:
        - compositeentitlement
      summary: Search for composite entitlements by cug code and filteres them with the
        organisation prerequisites and organisation type prerequisites
      description: This method will returns a list of all composite entitlements matching
        the specified cug and  prerequisites for given workrelation
      operationId: getCompositeEntitlementsFilteredWithOrganisationPrerequisites
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: orgCode
          in: query
          required: true
          schema:
            type: string
        - name: selfrequestableOnly
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightCompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  /compositeentitlement/getCompositeEntitlementsFilteredWithOrganisationAndTagPrerequisites:
    get:
      tags:
        - compositeentitlement
      summary: Search for composite entitlements by cug code and filteres them with the
        organisation prerequisites and organisation type prerequisites
      description: This method will returns a list of all composite entitlements matching
        the specified cug and  prerequisites for given workrelation
      operationId: getCompositeEntitlementsFilteredWithOrganisationAndTagPrerequisites
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: orgCode
          in: query
          required: true
          schema:
            type: string
        - name: tagWuuid
          in: query
          required: true
          schema:
            type: string
        - name: selfrequestableOnly
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightCompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  /compositeentitlement/getRequiredCompositeEntitlements:
    get:
      tags:
        - compositeentitlement
      summary: Search for composite entitlements which are prerequisites for given
        composite entitlement
      description: This method will returns a list of all composite entitlements matching
        the specified cug or workrelation
      operationId: getRequiredCompositeEntitlements
      parameters:
        - name: compositeEntitlementUuid
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompositeEntitlement"
      security:
        - WebIDM-Access-Token:
            []
  "/compositeentitlement/getCompEntPrerequisites/{uuid}":
    get:
      tags:
        - compositeentitlement
      summary: Search for composite entitlements prerequisites
      description: This method will returns a list of all composite entitlements
        prerequisites for passed comp ent id
      operationId: getCompEntPrerequisites
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompositeEntitlementPrerequisite"
      security:
        - WebIDM-Access-Token:
            []
  "/compositeentitlement/getTagPrerequisites/{uuid}":
    get:
      tags:
        - compositeentitlement
      summary: Search for tag prerequisites
      description: This method will returns a list of all tag entitlements prerequisites
        for passed comp ent id
      operationId: getTagPrerequisites
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TagPrerequisite"
      security:
        - WebIDM-Access-Token:
            []
  "/compositeentitlement/getPropertyPrerequisites/{uuid}":
    get:
      tags:
        - compositeentitlement
      summary: Search for property prerequisites
      description: This method will returns a list of all property entitlements
        prerequisites for passed comp ent id
      operationId: getPropertyPrerequisites
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PropertyPrerequisite"
      security:
        - WebIDM-Access-Token:
            []
  "/concepthistory/{id}":
    get:
      tags:
        - concepthistory
      summary: Find all concept history by id
      description: This method will find and return a concepthistory by yhe given id
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConceptHistory"
      security:
        - WebIDM-Access-Token:
            []
  "/concepthistory/virtualidentity/{uuid}":
    get:
      tags:
        - concepthistory
      summary: Find all concept history for a virtual identity
      description: This method will find and return all written concept history for a
        certain virtual identity ( workrelations, entitlementregistrations,
        virtualidentity modifications, .. )
      operationId: findByVirtualIdentity
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConceptHistory"
      security:
        - WebIDM-Access-Token:
            []
  "/concepthistory/enitlementname/{id}":
    get:
      tags:
        - concepthistory
      summary: Find all concept history by id
      description: This method will find and return a concepthistory by yhe given id
      operationId: getEntitlementName
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - WebIDM-Access-Token:
            []
  "/concepthistory/enitlementData/{id}":
    get:
      tags:
        - concepthistory
      summary: Find entitlement data by conceptHistory id
      description: "This method will find and return an entitlement data for
        found  conceptHistory object by its id "
      operationId: getEntitlementData
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementContextData"
      security:
        - WebIDM-Access-Token:
            []
  "/concepthistory/concept/{uuid}":
    get:
      tags:
        - concepthistory
      summary: Find all create/modify/archive reasons for a concept
      description: This method will find and return the list of chage reasons sorted by
        change date asc )
      operationId: findReasonsByConcept
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reason"
      security:
        - WebIDM-Access-Token:
            []
  "/concepthistory/updateConceptHistory/{conceptType}/{cugCode}":
    post:
      tags:
        - concepthistory
      summary: Updates CONCEPTHISTORY VIRTUALIDENTITYUUID and ORGANISATIONUUID fields
        with values stored in CONTENT
      description: Updates CONCEPTHISTORY VIRTUALIDENTITYUUID and ORGANISATIONUUID fields
        with values stored in CONTENT
      operationId: updateConceptHistory
      parameters:
        - name: conceptType
          in: path
          required: true
          schema:
            type: string
            enum:
              - virtualidentity
              - entitlementregistration
              - workrelation
        - name: cugCode
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/concepthistory/updateConceptHistoryDates/{cugCode}":
    post:
      tags:
        - concepthistory
      summary: Updates CONCEPTHISTORY VIRTUALIDENTITYUUID and ORGANISATIONUUID fields
        with values stored in CONTENT
      description: Updates CONCEPTHISTORY VIRTUALIDENTITYUUID and ORGANISATIONUUID fields
        with values stored in CONTENT
      operationId: updateConceptHistoryDates
      parameters:
        - name: cugCode
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /concept/unlockbytype:
    get:
      tags:
        - concept
      summary: Create or update the conceptstate of all concepts of a type
      description: This method update the state of all concepts of the specified type!
        Beware to not interfere with the workflow component
      operationId: setConceptState
      parameters:
        - name: conceptType
          in: query
          required: false
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
  "/concept/{conceptType}/{wuuid}/conceptstate":
    get:
      tags:
        - concept
      summary: Get the conceptstate
      description: This method will return the conceptstate of the concept with the given
        concept type and wuuid
      operationId: getConceptState
      parameters:
        - name: conceptType
          in: path
          required: true
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  "/concept/{conceptType}/propertydefinition":
    get:
      tags:
        - concept
      summary: Get property definitions
      description: This method will return the property definitions of the concept type. If
        a dependent Concept UUID ispassed, property definitions assigned to this
        concept are added to the resulting list.
      operationId: getPropertyDefinitions
      parameters:
        - name: conceptType
          in: path
          required: true
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
        - name: dependentConceptUuids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PropertyDefinition"
  "/concept/{conceptType}/{settingType}/setting":
    get:
      tags:
        - concept
      summary: Retrieve settings
      description: This method will return a list of Setting Assignments for a certain
        concept or concept Type
      operationId: getSettings
      parameters:
        - name: conceptType
          in: path
          required: true
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
        - name: settingType
          in: path
          required: true
          schema:
            type: string
            enum:
              - WORKFLOW
              - NOTIFICATION
              - SELFREQUEST
              - FRONTEND
              - BACKEND
        - name: conceptUuid
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SettingAssignment"
  /concept/settingassignment:
    put:
      tags:
        - concept
      summary: Create or update SettingAssignment
      description: This method will persist the given SettingAssignment from  wrapper object
      operationId: saveSettingAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SettingAssignmentWrapper"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingAssignment"
  /concept/settingassignments/search:
    get:
      tags:
        - concept
      summary: Search for SettingAssignment by criteria
      description: This method will return a searchresult containing the results of the view
      operationId: findSettingAssignments
      parameters:
        - name: settingType
          in: query
          required: true
          schema:
            type: string
            enum:
              - WORKFLOW
              - NOTIFICATION
              - SELFREQUEST
              - FRONTEND
              - BACKEND
        - name: conceptType
          in: query
          required: false
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
        - name: conceptUuid
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: nameOperation
          in: query
          required: false
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
        - name: valueOperation
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
  "/concept/settingassignments/{settingType}":
    get:
      tags:
        - concept
      summary: Search for SettingAssignment by criteria
      description: This method will return a list of settingassignments for the given
        settingtype
      operationId: getSettingAssignments
      parameters:
        - name: settingType
          in: path
          required: true
          schema:
            type: string
            enum:
              - WORKFLOW
              - NOTIFICATION
              - SELFREQUEST
              - FRONTEND
              - BACKEND
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SettingAssignment"
  "/concept/settingassignment/{id}":
    delete:
      tags:
        - concept
      summary: Delete Setting Assigment
      description: This method will delet the given Setting Assigment object.
      operationId: deleteSettingAssigment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
  /concept/settingassignments/bulk:
    post:
      tags:
        - concept
      summary: Creates SettingAssignments
      description: Accepts a list of SettingAssignmentWrapper objects in the request body
        and persists them.
      operationId: saveSettingAssignments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SettingAssignmentWrapper"
      responses:
        default:
          description: successful operation
  "/concept/propertydefinitionforcug/{conceptType}/{cug}":
    get:
      tags:
        - concept
      summary: Get property definitions
      description: "This method will return the property definitions of the concept type an
        cug. "
      operationId: getPropertyDefinitionsForCug
      parameters:
        - name: conceptType
          in: path
          required: true
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
        - name: cug
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PropertyDefinition"
  /concept/fieldNames/conceptTypes:
    get:
      tags:
        - concept
      summary: Get the conceptTypes that allow fieldNames configuration
      description: Returns the list of concepts that are configurable on fieldNames for
        provisioning
      operationId: fetchConceptTypesThatAreConfigurable
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  "/concept/fieldNames/{conceptType}":
    get:
      tags:
        - concept
      summary: Get the fields of the given conceptType
      description: Returns the list of field names of the given conceptType
      operationId: fetchFieldNamesForGiven
      parameters:
        - name: conceptType
          in: path
          required: true
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  "/concept/{conceptType}/{wuuid}/property":
    get:
      tags:
        - concept
      summary: Get properties
      description: This method will return the properties of the concept with the given
        concept type and wuuid
      operationId: getProperties
      parameters:
        - name: conceptType
          in: path
          required: true
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
            default: 3061c22f-9324-4f9b-9e3b-f51579180e63
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Property"
  /ContextRestService:
    get:
      tags:
        - ContextRestService
      summary: "Find ContextRestServiceResult "
      description: "Find the list of ContextRestServiceResult depending on the action
        passed "
      operationId: prepareResult
      parameters:
        - name: action
          in: query
          description: "Supported actions: listAccountTypes, listEntitlements"
          required: true
          schema:
            type: string
            enum:
              - listAccountTypes
              - listEntitlements
        - name: virtualIdentityUuid
          in: query
          required: false
          schema:
            type: string
        - name: targetSystemName
          in: query
          required: false
          schema:
            type: string
        - name: accountStatusValue
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContextRestServiceResult"
      security:
        - WebIDM-Access-Token:
            []
  /context/findall:
    get:
      tags:
        - context
      summary: "Find All  Entitlement Contexts "
      description: ""
      operationId: findAllContexts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntitlementContext"
      security:
        - WebIDM-Access-Token:
            []
  /context/findalllight:
    get:
      tags:
        - context
      summary: "Find All Light Entitlement Contexts "
      description: ""
      operationId: findAllLight
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightEntitlementContext"
      security:
        - WebIDM-Access-Token:
            []
  /context/reloadCache:
    post:
      tags:
        - context
      summary: Clear the cache and reload it for entitlement contexts
      description: This method will clear the entitlement context cache and reload it again
      operationId: reloadCache
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /context/sizeOfCache:
    get:
      tags:
        - context
      summary: Get all cache statistics
      description: This method will return the statistics of the cache (including size)
      operationId: sizeOfCache
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CacheSize"
      security:
        - WebIDM-Access-Token:
            []
  "/context/{id}":
    put:
      tags:
        - context
      summary: Updates the EntitlementContext object
      description: This method will update the given entitlementContext object
      operationId: updateContext
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: "#/components/requestBodies/EntitlementContext"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementContext"
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - context
      summary: Delete Entitlement Context
      description: This method will delete the given Entitlement Context object.
      operationId: deleteContext
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /context/find:
    post:
      tags:
        - context
      summary: Find Context Values for given organisationCode and propertyDefinitionId
      description: Find an ontext Values for for the given organisation code  and
        PropertyDefinition Id
      operationId: find
      parameters:
        - name: organisationCode
          in: query
          required: false
          schema:
            type: string
        - name: propertyDefinitionId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: entitlementName
          in: query
          required: false
          schema:
            type: string
        - name: dependantContextValue
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntitlementRegistration"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntitlementContextValue"
      security:
        - WebIDM-Access-Token:
            []
  /context/findByCode:
    get:
      tags:
        - context
      summary: "Find Context by code "
      description: "Find "
      operationId: findByName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementContext"
      security:
        - WebIDM-Access-Token:
            []
  /context:
    post:
      tags:
        - context
      summary: Save the EntitlementContext object
      description: This method will create the context
      operationId: saveContext
      requestBody:
        $ref: "#/components/requestBodies/EntitlementContext"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementContext"
      security:
        - WebIDM-Access-Token:
            []
  /dcs/cache/closedUsergroup:
    get:
      tags:
        - communication
      summary: clears the cache for closed user groups
      description: clears the cache for closed user groups
      operationId: cleanClosedUserGroupCache
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
  /dcs/cache/entitlements:
    get:
      tags:
        - communication
      summary: clears the cache for entitlements
      description: clears the cache for entitlements
      operationId: cleanEntitlementsCache
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
  /entitlementassignment:
    get:
      tags:
        - entitlementassignment
      summary: Find an Entitlement Assignment for the given Composite Entitlement UUID
        and Virtual Identity UUID
      description: Find an Entitlement Assignment for the given Composite Entitlement UUID
        and Virtual Identity UUID
      operationId: getEntitlementAssignmentBy
      parameters:
        - name: virtualIdentityUuid
          in: query
          required: true
          schema:
            type: string
        - name: compositeEntitlementUuid
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementAssignment"
      security:
        - WebIDM-Access-Token:
            []
  "/entitlementassignment/{uuid}":
    get:
      tags:
        - entitlementassignment
      summary: Looks up entitlement assignment
      description: This method will return the entitlement assignment with the given uuid
      operationId: getEntitlementAssignment
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementAssignment"
      security:
        - WebIDM-Access-Token:
            []
  /entitlementmaker:
    post:
      tags:
        - entitlementmaker
      summary: Creates and stores entititlements based on passed configuration xml
      description: Create and stores entititlements based on passed configuration xml
      operationId: makeEntitlements
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementMakerResult"
      security:
        - WebIDM-Access-Token:
            []
  /entitlementmaker/downloadall:
    get:
      tags:
        - entitlementmaker
      summary: Downloads all enititlements configuration for given cug
      description: Downloads all enititlements configuration for given cug - response is
        XML type
      operationId: downloadAllEntitlementsConfig
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - WebIDM-Access-Token:
            []
  "/entitlementmaker/{compositeEntitlementUuid}":
    get:
      tags:
        - entitlementmaker
      summary: Downloads  enititlement configuration for given entitlement uuid
      description: Downloads  enititlement configuration for given entitlement uuid-
        response is XML type
      operationId: downloadEntitlementConfig
      parameters:
        - name: compositeEntitlementUuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/entitlementRegistrationsCount:
    get:
      tags:
        - entitlementregistration
      summary: Searches entitlement registrations count by workrelation unique
        identifier
      description: This method will return the number of all entitlement registrations that
        are assigned to the given workrelation
      operationId: getEntitlementRegistrationsCount
      parameters:
        - name: workrelationUuid
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration:
    get:
      tags:
        - entitlementregistration
      summary: Searches entitlement registrations by workrelation unique identifier or
        by given list of uuids
      description: This method will return the entitlement registrations that are assigned
        to the given workrelation
      operationId: getEntitlementRegistrations
      parameters:
        - name: workrelationUuid
          in: query
          required: false
          schema:
            type: string
        - name: uuids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntitlementRegistration"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - entitlementregistration
      summary: Create the entitlement registration
      description: This method will create the given entitlement registration and return
        one with a uuid
      operationId: createEntitlement
      requestBody:
        $ref: "#/components/requestBodies/EntitlementRegistration"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementRegistration"
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - entitlementregistration
      summary: "Delete  many entitlement registrations at once by "
      description: This method will archive the given entitlement registration objects.
      operationId: deleteMany
      parameters:
        - name: uuids
          in: query
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: removalReason
          in: query
          required: false
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/calculate_master:
    get:
      tags:
        - entitlementregistration
      summary: calculate master flag
      description: ""
      operationId: calculateMasterFlagForNewEntitlement
      parameters:
        - name: virtualIdentityUuid
          in: query
          required: true
          schema:
            type: string
        - name: compositeEntitlementName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/haspermission:
    post:
      tags:
        - entitlementregistration
      summary: "Check specific permission for ER object "
      description: This method will check if user has permission to do on  the given
        entitlement registration and returnes true is so or false otherwise
      operationId: checkPrivilliges
      parameters:
        - name: action
          in: query
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/EntitlementRegistration"
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                type: boolean
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/bulk:
    put:
      tags:
        - entitlementregistration
      summary: Save entitlement registration
      description: This method will persist the given entitlement registration wrapper
      operationId: saveEntitlement
      requestBody:
        $ref: "#/components/requestBodies/EntitlementWrapper"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/archive:
    put:
      tags:
        - entitlementregistration
      summary: Archive entitlement
      description: This method will archive the given enititlement object.
      operationId: archiveEntitlement
      requestBody:
        $ref: "#/components/requestBodies/EntitlementWrapper"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/entitlementregistration/{uuid}":
    get:
      tags:
        - entitlementregistration
      summary: Looks up entitlement registration
      description: This method will return the entitlement registration with the given uuid
      operationId: getEntitlementRegistration
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementRegistration"
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - entitlementregistration
      summary: Delete entitlement registration
      description: This method will archive the given entitlement registration object.
      operationId: deleteEntitlementRegistration
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
        - name: removalReason
          in: query
          required: false
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/findbyOrgAndEntitlement:
    get:
      tags:
        - entitlementregistration
      summary: Looks up entitlement registration
      description: This method will return the entitlement registration with the given uuid
      operationId: findEntitlementByOrganisationCodeAndCompositeEntitlementWuuid
      parameters:
        - name: viWuuid
          in: query
          required: true
          schema:
            type: string
        - name: orgCode
          in: query
          required: true
          schema:
            type: string
        - name: compEntWuuid
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementRegistration"
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/searchDelete:
    post:
      tags:
        - entitlementregistration
      summary: Search for entitlement registrations available for archive by user
        filtered with criteria
      description: This method will return  entitlement registration search results wrapped
        in a searchresult
      operationId: searchEntitlementRegistrationsAvailableToDelete
      requestBody:
        $ref: "#/components/requestBodies/EntitlementRegistrationSearchCriteria"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/searchorganisationadministrators:
    get:
      tags:
        - entitlementregistration
      summary: "Search for organisation administrator type entitlement registrations "
      description: This method will return entitlement registration search results wrapped
        in a searchresult
      operationId: getEntitlementRegistrationsByOrgAndEntitlements
      parameters:
        - name: organisationUuid
          in: query
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/search:
    post:
      tags:
        - entitlementregistration
      summary: Search for entitlement registrations by criteria
      description: This method will return entitlement registration search results wrapped
        in a searchresult
      operationId: searchEntitlementRegistrations
      requestBody:
        $ref: "#/components/requestBodies/EntitlementRegistrationSearchCriteria"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/pause_resume:
    get:
      tags:
        - entitlementregistration
      summary: "Pauses or resumes  many entitlement registrations at once by "
      description: This method will pause or resume the given entitlement registration
        objects.
      operationId: setEnabled
      parameters:
        - name: uuids
          in: query
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: reason
          in: query
          required: false
          schema:
            type: string
        - name: enabled
          in: query
          required: true
          schema:
            type: boolean
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/validate:
    post:
      tags:
        - entitlementregistration
      summary: Validate the entitlement registration
      description: This method will validate the given entitlement registration
      operationId: validate
      requestBody:
        $ref: "#/components/requestBodies/EntitlementRegistration"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/entitlementregistration/update/{wuuid}":
    put:
      tags:
        - entitlementregistration
      summary: Update the entitlement registration
      description: This method will update the given entitlement registration
      operationId: updateEntitlementRegistration
      parameters:
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/EntitlementRegistration"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementRegistration"
      security:
        - WebIDM-Access-Token:
            []
  /entitlementregistration/entitlementregistration/bulk:
    post:
      tags:
        - entitlementregistration
      summary: Create the entitlement registrations
      description: This method will create the given entitlement registrations and them
        with the uuids
      operationId: createMany
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/EntitlementRegistration"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntitlementRegistration"
      security:
        - WebIDM-Access-Token:
            []
  "/handler/java/{name}":
    get:
      tags:
        - handler
      summary: Find java class handler by name
      description: This method will find and return  the handler
      operationId: findJavaHandlerByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JavaClassHandler"
  "/handler/el/{name}":
    get:
      tags:
        - handler
      summary: Find expression language handler by name
      description: This method will find and return  the handler
      operationId: findElHandlerByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ELHandler"
  /handler/el:
    get:
      tags:
        - handler
      summary: Fetches all handlers consisting out of java code
      description: This method will return a list expression language handlers
      operationId: findJavaCodeHandlers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ELHandler"
  /handler/java:
    get:
      tags:
        - handler
      summary: Fetches all handlers consisting out of java code
      description: This method will return a list expression language handlers
      operationId: findJavaClassHandlers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JavaClassHandler"
  "/handler/{name}":
    delete:
      tags:
        - handler
      summary: Delete handler
      description: This method will delete the handler
      operationId: deleteHandler
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
  /identity/regulation:
    post:
      tags:
        - identity
      summary: Add the regulation accepted date to an identity
      description: This method will set the date of when the user accepted the regulations
      operationId: userAcceptedRegulation
      parameters:
        - name: dateOfRegulationAcceptance
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: uuid
          in: query
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/identity/{identificationNumber}":
    get:
      tags:
        - identity
      summary: Find an identity for a given identificationNumber (Social Security
        number)
      description: ""
      operationId: findBy
      parameters:
        - name: identificationNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
      security:
        - WebIDM-Access-Token:
            []
  "/identity/transient/{identificationNumber}":
    get:
      tags:
        - identity
      summary: Constructs an identity for a given identificationNumber that will not be
        serialized to our infrastructure
      description: ""
      operationId: constructFor
      parameters:
        - name: identificationNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
      security:
        - WebIDM-Access-Token:
            []
  /notificationtemplate/createorupdate:
    put:
      tags:
        - notificationtemplate
      summary: Save the notificationTemplate
      description: This method will persist the given notificationTemplate
      operationId: saveNotificationTemplate
      requestBody:
        $ref: "#/components/requestBodies/NotificationTemplate"
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NotificationTemplate"
  "/notificationtemplate/findallforcug/{cugCode}":
    get:
      tags:
        - notificationtemplate
      summary: Search for Notification Templates  by cug
      description: This method will return a list of all Notification templates definde for
        given cug
      operationId: findAllForCug
      parameters:
        - name: cugCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationTemplate"
  /notificationtemplate/search:
    get:
      tags:
        - notificationtemplate
      summary: Search for Notification Templates by criteria
      description: This method will return a searchresult containing the results
      operationId: findNotificationTemplates
      parameters:
        - name: templateType
          in: query
          required: false
          schema:
            type: string
            enum:
              - HTML
              - TEXT
              - XML
        - name: actionType
          in: query
          required: false
          schema:
            type: string
        - name: actionTypeOperation
          in: query
          required: false
          schema:
            type: string
            enum:
              - EQUALS
              - STARTS_WITH
              - CONTAINS
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
  "/notificationtemplate/{id}":
    put:
      tags:
        - notificationtemplate
      summary: Update the NotificationTemplate
      description: This method will update the given NotificationTemplate
      operationId: updateNotificationTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: "#/components/requestBodies/NotificationTemplate"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTemplate"
    delete:
      tags:
        - notificationtemplate
      summary: Delete NotificationTemplate
      description: This method will delete the given NotificationTemplate object.
      operationId: deleteNotificationTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
  /notificationtemplate:
    get:
      tags:
        - notificationtemplate
      summary: Find Notification templates
      description: Find Notification template by cug
      operationId: findNotificationTemplate
      parameters:
        - name: closedUserGroup
          in: query
          required: true
          schema:
            type: string
        - name: notificationType
          in: query
          required: true
          schema:
            type: string
            enum:
              - HTML
              - TEXT
              - XML
        - name: actionType
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTemplate"
    post:
      tags:
        - notificationtemplate
      summary: Create the NotificationTemplate
      description: This method will create the given NotificationTemplate
      operationId: createNotificationTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationTemplate"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTemplate"
  /notification:
    get:
      tags:
        - notification
      summary: Find Notifications using SearchCriteria
      description: Find Notifications using SearchCriteria
      operationId: findNotifications
      parameters:
        - name: searchCriteria
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
    post:
      tags:
        - notification
      summary: Create Notifications
      description: Create Notifications of given type and given uuids
      operationId: createNotifications
      parameters:
        - name: notificationType
          in: query
          required: true
          schema:
            type: string
            enum:
              - WREXP
              - ENTEXP
              - ENTEXPSUM
              - OPEN_TASKS
              - ENTREG_ACTIVE
              - ENTREG_REFUSED
              - BULKUPLOAD_FINISHED
              - VLIMPERS_TOO_MANY_CHANGES
              - SELF_REQUESTS
              - SELF_REQUESTS_WAIT_TOO_LONG
              - OPEN_TASKS_NO_APPROVER
              - ENTITLEMENT_CREATE
              - LEADING_PERSON
              - DES_ERRORS
        - name: uuids
          in: query
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
  /organisationtypeassignment:
    get:
      tags:
        - organisationtypeassignment
      summary: Search organisationTypes
      description: "Find the organisationTypeAssignments  with the given organisation type
        uuid "
      operationId: getOrganisationTypeAssignments
      parameters:
        - name: organisationTypeUuid
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationTypeAssignment"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - organisationtypeassignment
      summary: Save the organisationTypeAssignment
      description: This method will create the given organisationTypeAssignment
      operationId: createOrganisationTypeAssignment
      requestBody:
        $ref: "#/components/requestBodies/OrganisationTypeAssignment"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationTypeAssignment"
      security:
        - WebIDM-Access-Token:
            []
  /organisationtypeassignment/bulk:
    put:
      tags:
        - organisationtypeassignment
      summary: Save the organisationType
      description: This method will persist the given organisationType
      operationId: saveOrganisationTypeAssignment
      requestBody:
        $ref: "#/components/requestBodies/OrganisationTypeAssignmentWrapper"
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrganisationTypeAssignment"
      security:
        - WebIDM-Access-Token:
            []
  /organisationtypeassignment/archive:
    put:
      tags:
        - organisationtypeassignment
      summary: Archive organisationTypeAssignment
      description: This method will archive the given organisationTypeAssignment object.
      operationId: archiveOrganisationTypeAssignment
      requestBody:
        $ref: "#/components/requestBodies/OrganisationTypeAssignmentWrapper"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - WebIDM-Access-Token:
            []
  "/organisationtypeassignment/{uuid}":
    put:
      tags:
        - organisationtypeassignment
      summary: Updates the organisationTypeAssignment
      description: This method will update the given organisationTypeAssignment
      operationId: updateOrganisationTypeAssignment
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/OrganisationTypeAssignment"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationTypeAssignment"
      security:
        - WebIDM-Access-Token:
            []
  "/organisationtype/{uuid}":
    get:
      tags:
        - organisationtype
      summary: Looks up organisation types
      description: This method will return the organisationTypes with the given uuid
      operationId: getOrganisationType
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationType"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - organisationtype
      summary: Updates the organisation
      description: This method will update the given organisation
      operationId: updateOrganisationType
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/OrganisationType"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationType"
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - organisationtype
      summary: Delete entitlement registration
      description: This method will archive the given entitlement registration object.
      operationId: deleteOrganisationType
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/organisationtype/byCug/{cugCode}":
    get:
      tags:
        - organisationtype
      summary: Search organisationTypes
      description: "Find the organisationTypes  with the given cug code "
      operationId: getOrganisationTypesForUserOrganisations
      parameters:
        - name: cugCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationType"
      security:
        - WebIDM-Access-Token:
            []
  /organisationtype:
    get:
      tags:
        - organisationtype
      summary: Search organisationTypes
      description: "Find the organisationTypes  with the given cug code "
      operationId: getOrganisationTypes
      parameters:
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationType"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - organisationtype
      summary: Save the organisation
      description: This method will create the given organisationType
      operationId: createOrganisationType
      requestBody:
        $ref: "#/components/requestBodies/OrganisationType"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationType"
      security:
        - WebIDM-Access-Token:
            []
  /organisationtype/bulk:
    put:
      tags:
        - organisationtype
      summary: Save the organisationType
      description: This method will persist the given organisationType
      operationId: saveOrganisationType
      requestBody:
        $ref: "#/components/requestBodies/OrganisationTypeWrapper"
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrganisationType"
      security:
        - WebIDM-Access-Token:
            []
  /organisationtype/archive:
    put:
      tags:
        - organisationtype
      summary: Archive organisationType
      description: This method will archive the given organisationType object.
      operationId: archiveOrganisationType
      requestBody:
        $ref: "#/components/requestBodies/OrganisationTypeWrapper"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
      security:
        - WebIDM-Access-Token:
            []
  /organisationtype/search:
    get:
      tags:
        - organisationtype
      summary: Search for Orgnanisation types  by criteria
      description: This method will return a searchresult containing the results of the view
      operationId: findOrganisationTypes
      parameters:
        - name: code
          in: query
          required: false
          schema:
            type: string
        - name: codeOperation
          in: query
          required: false
          schema:
            type: string
        - name: displayName
          in: query
          required: false
          schema:
            type: string
        - name: displayNameOperation
          in: query
          required: false
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /organisation/search:
    post:
      tags:
        - organisation
      summary: Search for organisations by criteria
      description: This method will return organisations in a SearchResult object
      operationId: searchOrganisations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganisationSearchCriteria"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /organisation/findOrgsWhereUserCanAddWorkrelation:
    get:
      tags:
        - organisation
      summary: Search for organisation children by criteria
      description: This method will return child organisations in a SearchResult object
      operationId: getAllOrganisationsWhereUserCanCreateWorkrelations
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightOrganisation"
      security:
        - WebIDM-Access-Token:
            []
  /organisation/checkBtbApprovers:
    get:
      tags:
        - organisation
      summary: For BTBEnabled Cug - for each org code  calls BTB service to check for
        approvers.
      description: This method will return the list of org codes  with no approvers defined
      operationId: checkBtbApprovers
      parameters:
        - name: organisationCodes
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightOrganisation"
      security:
        - WebIDM-Access-Token:
            []
  "/organisation/retrieveandsavechildren/{uuid}":
    put:
      tags:
        - organisation
      summary: "Retrieves given organisation children and saves them. "
      description: This method will update the given organisation with children retrieved
        from VKBO
      operationId: retrieveAndSaveOrganisationChildren
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Organisation"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organisation"
      security:
        - WebIDM-Access-Token:
            []
  "/organisation/{uuid}":
    get:
      tags:
        - organisation
      summary: Looks up organisation
      description: This method will return the organisation with the given uuid
      operationId: getOrganisation
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organisation"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - organisation
      summary: Updates the organisation
      description: This method will update the given organisation
      operationId: updateOrganisation
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Organisation"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organisation"
      security:
        - WebIDM-Access-Token:
            []
  /organisation:
    get:
      tags:
        - organisation
      summary: Search organisations
      description: Find the organisations with the given organisation code if provided,
        otherwise fetch the organisations for the given Closed User Group,
        otherwise fetch all the organisations.
      operationId: getOrganisations
      parameters:
        - name: code
          in: query
          required: false
          schema:
            type: string
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
        - name: suborganisations
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organisation"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - organisation
      summary: Save the organisation
      description: This method will create the given organisation
      operationId: createOrganisation
      requestBody:
        $ref: "#/components/requestBodies/Organisation"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organisation"
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - organisation
      summary: Delete organisation
      description: This method will archive the given organisation object.
      operationId: deleteOrganisation
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /organisation/light:
    get:
      tags:
        - organisation
      summary: Search light organisations
      description: Find active light organisations with the given organisation code if
        provided, or all for given Cug if provided otherwise fetch all active
        light organisations
      operationId: getActiveLightOrganisations
      parameters:
        - name: code
          in: query
          required: false
          schema:
            type: string
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
        - name: suborganisations
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightOrganisation"
      security:
        - WebIDM-Access-Token:
            []
  "/organisation/getOrganisationsByCug/{cugCode}":
    get:
      tags:
        - organisation
      summary: Search organisations
      description: Find the light organisations with the given Closed User Group
      operationId: getOrganisationsByCug
      parameters:
        - name: cugCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightOrganisation"
      security:
        - WebIDM-Access-Token:
            []
  /organisation/getOrganisationsByCugAndCodes:
    get:
      tags:
        - organisation
      summary: Search organisations
      description: Find the organisations for the given Closed User Group and  organisation
        codes
      operationId: getOrganisationsByCugAndOrganisationCodes
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: organisationCodes
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightOrganisation"
      security:
        - WebIDM-Access-Token:
            []
  "/organisation/getNoOfOrgsEligibleToCreateWr/{cugCode}/{viWuuid}":
    get:
      tags:
        - organisation
      summary: "Search organisations eligible to create Workrelatione "
      description: "Find the number of  organisations eligible to create workrelations -
        excluds orgs for which workrelations exists and includes the one for
        user has right to list "
      operationId: getNoOfOrgsEligibleToCreateWr
      parameters:
        - name: cugCode
          in: path
          required: true
          schema:
            type: string
        - name: viWuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
        - WebIDM-Access-Token:
            []
  "/organisation/vkbo/{organisationCode}":
    get:
      tags:
        - organisation
      summary: Fetch an organisation from the VKBO system
      description: This method will return an organisation
      operationId: getVkboOrganisation
      parameters:
        - name: organisationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organisation"
        "500":
          description: Backend exception occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebIdmException"
      security:
        - WebIDM-Access-Token:
            []
  "/organisation/vkbo/businesUnits/{parentOrganisationCode}":
    get:
      tags:
        - organisation
      summary: Fetch the number of business units (suborganisations) from the VKBO
        system
      description: This method will return number of business units (suborganisations) from
        the VKBO system
      operationId: getNumberOfVkboBusinessUnits
      parameters:
        - name: parentOrganisationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "500":
          description: Backend exception occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebIdmException"
      security:
        - WebIDM-Access-Token:
            []
  /organisation/searchChildren:
    get:
      tags:
        - organisation
      summary: Search for organisation children by criteria
      description: This method will return child organisations in a SearchResult object
      operationId: searchChildren
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: parentCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /organisation/findadministrators:
    get:
      tags:
        - organisation
      summary: Search for organisation Administrators
      description: This method will return combined list of local administratotors and btb
        administrators in  OrganisationAdministrator object
      operationId: getOrganisationAdministrators
      parameters:
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
        - name: orgCode
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationAdministrator"
      security:
        - WebIDM-Access-Token:
            []
  /organisation/createFromVkbo:
    post:
      tags:
        - organisation
      summary: Creates the organisation
      description: This method will create the given organisation
      operationId: createFromVkbo
      parameters:
        - name: organisationCodes
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
      security:
        - WebIDM-Access-Token:
            []
  "/organisation/validateCode/{orgCode}":
    get:
      tags:
        - organisation
      summary: Validate  the organisation code
      description: This method will validate the given organisation code and returns
        exception if code already exists in the cug other then logged user
      operationId: validateCode
      parameters:
        - name: orgCode
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /organisation/bulk:
    put:
      tags:
        - organisation
      summary: Save the organisation
      description: This method will persist the given organisation
      operationId: saveOrganisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganisationWrapper"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Organisation"
      security:
        - WebIDM-Access-Token:
            []
  /organisation/validate:
    post:
      tags:
        - organisation
      summary: Validate the organisation
      description: This method will validate the given organisation
      operationId: validateOrganisation
      requestBody:
        $ref: "#/components/requestBodies/Organisation"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /property:
    get:
      tags:
        - property
      summary: Search properties for a concept
      description: ""
      operationId: getConceptProperties
      parameters:
        - name: uuid
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Property"
  /provisioning/virtualidentities:
    get:
      tags:
        - provisioning
      summary: Find virtual identities which need provisioning
      description: This method will return the wuiids of the virtual identities which need
        provisioning
      operationId: getVirtualIdentities
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionWrapper"
  "/provisioning/system/delete/{wuuid}":
    delete:
      tags:
        - provisioning
      summary: Removes the  managed user account from OpenIdm
      description: This method will clean a user from OpenIdm
      operationId: cleanOpenIdmAccount
      parameters:
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  "/provisioning/provisionstatus/{wuuid}":
    put:
      tags:
        - provisioning
      summary: Notificate the status of the provisioning
      description: This method wil update the status of the provisioning on the virtual
        identity
      operationId: notifyProvisionStatus
      parameters:
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProvisionResult"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
  "/provisioning/changeprovisioningstatus/{wuuid}":
    post:
      tags:
        - provisioning
      summary: Change 'needs provisioning' flag
      description: This method wil update the status of the provisioning on the virtual
        identity
      operationId: changeProvisioningStatus
      parameters:
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
        - name: provisioningStatus
          in: query
          required: true
          schema:
            type: boolean
      responses:
        default:
          description: successful operation
  "/provisioning/changeprovision/{cugCode}":
    post:
      tags:
        - provisioning
      summary: Change 'needs provisioning' flag for a whole CUG
      description: This method wil update the status of the provisioning on all the virtual
        identities of a closed usergroup
      operationId: changeProvisioningStatusByClosedUserGroup
      parameters:
        - name: cugCode
          in: path
          required: true
          schema:
            type: string
        - name: provisioningStatus
          in: query
          required: true
          schema:
            type: boolean
      responses:
        default:
          description: successful operation
  "/provisioning/targetsystem/status/{targetSystemName}":
    get:
      tags:
        - provisioning
      summary: Gets the status of a targetsystem
      description: This method will return the status of a targetsystem
      operationId: getTargetsystemStatus
      parameters:
        - name: targetSystemName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetSystemStatus"
  "/provisioning/view/{wuuid}":
    get:
      tags:
        - provisioning
      summary: Compose  provisioning view
      description: This method will return the provisioning data for the virtual identity
        with the given wuuid
      operationId: getView
      parameters:
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  "/provisioning/managed/{wuuid}":
    get:
      tags:
        - provisioning
      summary: Fetches the managed user view
      description: This method will return the managed user (openidm) for the virtual
        identity with the given wuuid
      operationId: getManagedView
      parameters:
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  "/provisioning/thereAreLockedConceptsDependingOn/{viWuuid}":
    get:
      tags:
        - provisioning
      summary: check if virtual identity has any depending locked workrelations or
        entitlements
      description: This method will return true if virtual identity has any depending
        locked workrelations or entitlements or false otherwise
      operationId: thereAreLockedConceptsDependingOn
      parameters:
        - name: viWuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
  /provisioning/pooling:
    get:
      tags:
        - provisioning
      summary: Gets the the pooling (provisioning) status
      description: This method will return current pooling status  (true/false)
      operationId: getPoolingEnabled
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                type: boolean
    post:
      tags:
        - provisioning
      summary: Sets  the the pooling (provisioning) status
      description: This method will return current pooling status  (true/false)
      operationId: setPoolingEnabled
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                type: string
  "/provisioning/system/{targetSystem}/{wuuid}":
    get:
      tags:
        - provisioning
      summary: Fetches the system user view for a targetsystem
      description: This method will return the user within a targetsystem for the virtual
        identity with the given wuuid
      operationId: getSystemView
      parameters:
        - name: targetSystem
          in: path
          required: true
          schema:
            type: string
        - name: accountType
          in: query
          required: false
          schema:
            type: string
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /proxyconfig:
    get:
      tags:
        - proxyconfig
      summary: Find all proxy configurations
      description: This method will find all proxy configurations
      operationId: getProxyConfigurations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProxyConfig"
      security:
        - WebIDM-Access-Token:
            []
  /proxyconfig/findByUrlContext:
    get:
      tags:
        - proxyconfig
      summary: Find proxy configurations by url context
      description: This method will find a proxyConfiguration
      operationId: findProxyConfigurationsByUrlContext
      parameters:
        - name: urlContext
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProxyConfig"
      security:
        - WebIDM-Access-Token:
            []
  "/proxyconfig/delete/{id}":
    get:
      tags:
        - proxyconfig
      summary: Deletes the proxyconfig
      description: Deletes the proxyconfig
      operationId: deleteManagedUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
      security:
        - WebIDM-Access-Token:
            []
  /proxyconfig/save:
    put:
      tags:
        - proxyconfig
      summary: Saves the proxyConfig
      description: This method will save the proxy config
      operationId: saveProxyConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProxyConfig"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
      security:
        - WebIDM-Access-Token:
            []
  /public/findOrgs:
    get:
      tags:
        - public
      summary: Fetches orgs
      description: Fetches organisations based on code
      operationId: findByCodes
      parameters:
        - name: organisationCode
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LightOrganisation"
  /scheduling/leadingPerson:
    post:
      tags:
        - scheduling
      summary: Run the leadingPerson action
      description: This method will run leading person action
      operationId: runLeadingPersonAction
      parameters:
        - name: webIdmAccessToken
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeadingPersonActionParams"
      responses:
        default:
          description: successful operation
  /scheduling/synctool:
    post:
      tags:
        - scheduling
      summary: Run the synctool action
      description: "This method will run sync data upload "
      operationId: runSynctoolAction
      parameters:
        - name: webIdmAccessToken
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SynctoolActionParams"
      responses:
        default:
          description: successful operation
  /scheduling/vlimperssync:
    post:
      tags:
        - scheduling
      summary: Run the Vlimpers sync action
      description: This method will run Vlimpers sync process to download Vlimpers files
        and prepare the upload for synctool
      operationId: runVlimpersSyncAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VlimpersSyncActionParams"
        required: true
      responses:
        default:
          description: successful operation
  /scheduling/default_entitlement_scanner:
    post:
      tags:
        - scheduling
      summary: Run the Default Entitlement Scanner manually
      description: This method will create Entitlement Registrations for the found
        workrelations by organisation and with the given composite entitlement
        code
      operationId: runEntitlementRegistrationAction
      parameters:
        - name: entitlementCode
          in: query
          required: true
          schema:
            type: string
        - name: contextProperty
          in: query
          required: false
          schema:
            type: string
        - name: contextValues
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: duration
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
              default: '{"cugCode": "", "organisationCode": ""}'
        required: true
      responses:
        default:
          description: successful operation
  /scheduling/magdasync:
    post:
      tags:
        - scheduling
      summary: Run the magdasynctool
      description: This method will start downloading files from magda
      operationId: runMagdaSync
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/notification:
    post:
      tags:
        - scheduling
      summary: Run the Notification sending from scheduler
      description: This method will get Notifications based on searchCriteria and send them
        to adressats
      operationId: runNotificationAction
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/workrelation_expiration_notification:
    post:
      tags:
        - scheduling
      summary: Run the workrelation expiration notification scheduler
      description: This method will create Notifications for expired workrelations
      operationId: runWorkrelationExpirationNotificationAction
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/entitlement_expiration_notification:
    post:
      tags:
        - scheduling
      summary: Run the entitlement expiration notification scheduler
      description: This method will create Notifications for expired entitlements
      operationId: runEntitlementExpirationNotificationAction
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/markForProvisioning:
    post:
      tags:
        - scheduling
      summary: Mark all necessary virtual identities for provisioning
      description: "This method will mark all the virtual identities necessary ( with
        expired WR/ENT, failed provisioning ) for provisioning "
      operationId: runMarkForProvisioningAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarkForProvisioningSearchCriteria"
        required: true
      responses:
        default:
          description: successful operation
  /scheduling/entitlementsummary:
    post:
      tags:
        - scheduling
      summary: Run the summary entitlement expire scheduler
      description: This method will create summary Notifications to administratots for
        expiring entitlements
      operationId: runEntitlementExpireSummaryAction
      parameters:
        - name: adminRoleName
          in: query
          description: The name of composite entitlement of administrator i.e.
            EA_COMP_ENT_OrganisationAdministrator
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/search:
    get:
      tags:
        - scheduling
      summary: Search for Schedules by criteria
      description: This method will return a searchresult containing the results
      operationId: findSchedules
      parameters:
        - name: scheduleType
          in: query
          required: false
          schema:
            type: string
            enum:
              - SYNCTOOL
              - NOTIFICATION
              - DEFAULTENTITLEMENT
              - EXPIRE_WORKRELATION
              - EXPIRE_ENTITLEMENT
              - EXPIRE_ENTITLEMENT_SUMMARY
              - OPEN_TASKS
              - MARK_FOR_PROVISIONING
              - SELF_REQUESTS_OPEN_TASKS
              - SELF_REQUESTS_WAIT_TOO_LONG
              - OPEN_TASKS_MERGED
              - PING_TARGETSYSTEMS
              - LEADING_PERSON
              - CONCEPTS_REPORT
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: nameOperation
          in: query
          required: false
          schema:
            type: string
            enum:
              - EQUALS
              - STARTS_WITH
              - CONTAINS
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
  /scheduling/opentasks:
    post:
      tags:
        - scheduling
      summary: Run the open tasks scheduler
      description: This method will create  Notifications to administratots for open tasks
        pending approvel
      operationId: runOpenTasksAction
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/opentasksmerged:
    post:
      tags:
        - scheduling
      summary: Run the open tasks scheduler merged with BTB
      description: This method will create  Notifications to administrators for open tasks
        pending approval
      operationId: runOpenTasksMergedAction
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/pingTargetSystems:
    post:
      tags:
        - scheduling
      summary: Ping the targetSystems
      description: This method will ping targetSystems
      operationId: pingTargetSystems
      responses:
        default:
          description: successful operation
  /scheduling/openbtbtasks:
    post:
      tags:
        - scheduling
      summary: Run the BTB open tasks scheduler
      description: This method will create  Notifications to BTB  administrators for  open
        tasks pending approval. This will be created for BTB enabled CUG only
      operationId: runOpenBtbTasks
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/selfrequestswaittoolong:
    post:
      tags:
        - scheduling
      summary: Run the self requests waiting approval too long scheduler
      description: This method will create  Notifications to the SelfRequest creator
        notifying the person that his request waits for approval too long
      operationId: runSelfRequestsWaitingTooLongAction
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/createentitlements:
    post:
      tags:
        - scheduling
      summary: Create new entitlements
      description: This method will create new entitlements by scanning a directory and
        reporting the actions done
      operationId: runCreateEntitlementAction
      requestBody:
        $ref: "#/components/requestBodies/makeEntitlementsXml"
      responses:
        default:
          description: successful operation
  /scheduling/conceptreport:
    post:
      tags:
        - scheduling
      summary: Run the concept report action
      description: "This method will generate the report of concepts of given type "
      operationId: runConceptReportAction
      parameters:
        - name: webIdmAccessToken
          in: query
          required: true
          schema:
            type: string
        - name: emailRecipients
          in: query
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: conceptType
          in: query
          required: true
          schema:
            type: string
            enum:
              - identity
              - virtualidentity
              - cug
              - workrelation
              - organisation
              - organisationtype
              - organisationtypeassignment
              - entitlementregistration
              - entitlementassignment
              - basicentitlement
              - compositeentitlement
              - tag
              - tagcluster
              - selfrequest
              - rule
              - applicationnumber
              - all
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: searchCriteria
          in: query
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
  "/scheduling/{id}":
    get:
      tags:
        - scheduling
      summary: Fetch a virtual identity based on its unique identifier
      description: This method will return the Scheduler with the given unique identifier
      operationId: getScheduler
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scheduler"
    delete:
      tags:
        - scheduling
      summary: Delete Scheduler
      description: This method will delete the given Scheduler object.
      operationId: deleteScheduler
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
  "/scheduling/updatelasttimerun/{schedulerId}":
    put:
      tags:
        - scheduling
      summary: Update  last run date to now
      description: This method will update the lastTimeRun to now for given Scheduler object
      operationId: updateLastTimeRun
      parameters:
        - name: schedulerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: "#/components/requestBodies/Scheduler"
      responses:
        default:
          description: successful operation
  /scheduling:
    post:
      tags:
        - scheduling
      summary: Create the Scheduler
      description: This method will create the given scheduler
      operationId: createScheduler
      requestBody:
        $ref: "#/components/requestBodies/Scheduler"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scheduler"
    put:
      tags:
        - scheduling
      summary: Update Scheduler
      description: This method will persist the given Scheduler object
      operationId: saveScheduler
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scheduler"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scheduler"
  /scheduling/findAllActive:
    get:
      tags:
        - scheduling
      summary: Find all active schedules
      description: This method will find all active schedules
      operationId: findAllActive
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Scheduler"
  /scheduling/findall:
    get:
      tags:
        - scheduling
      summary: Search for all Schedulers
      description: This method will return a list of all Schedulers definded
      operationId: findAllSchedulers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Scheduler"
  "/selfrequest/{uuid}":
    get:
      tags:
        - selfrequest
      summary: "Looks up self request "
      description: This method will return the self request with the given uuid
      operationId: getSelfRequest
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SelfRequest"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - selfrequest
      summary: Updates the self request
      description: This method will update the self request
      operationId: saveSelfRequest
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SelfRequest"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SelfRequest"
      security:
        - WebIDM-Access-Token:
            []
  /selfrequest/search:
    get:
      tags:
        - selfrequest
      summary: Search for given user SelfRequests
      description: This method will return SelfRequest search results wrapped in a
        searchresult
      operationId: getUserSelfRequests
      parameters:
        - name: viUuid
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /selfrequest/validate:
    post:
      tags:
        - selfrequest
      summary: Validate the self request
      description: This method will validate the given selfrequest
      operationId: validateSelfRequest
      requestBody:
        $ref: "#/components/requestBodies/SelfRequest"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /selfrequest:
    post:
      tags:
        - selfrequest
      summary: Save the self request
      description: This method will create the given self request
      operationId: createSelfRequest
      requestBody:
        $ref: "#/components/requestBodies/SelfRequest"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SelfRequest"
      security:
        - WebIDM-Access-Token:
            []
  "/settings/isCreateOrgChildrenFromVKBOEnabled/{cug}":
    get:
      tags:
        - settings
      summary: Checks CREATE_ORG_CHILDREN setting for given cug
      description: This method will return true if automatic creation  of organisation
        branches from vkbo is enabled for given cug or false otherwise
      operationId: isCreateOrgChildrenFromVKBOEnabled
      parameters:
        - name: cug
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
  /systemproperty/findall:
    get:
      tags:
        - systemproperty
      summary: Find system properties by name
      description: Find system properties
      operationId: findAll
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SystemProperty"
  /systemproperty/search:
    get:
      tags:
        - systemproperty
      summary: Search for System property by criteria
      description: This method will return a system property containing the results of the
        view
      operationId: findSystemproperties
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: nameOperation
          in: query
          required: false
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
        - name: valueOperation
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
  /systemproperty:
    get:
      tags:
        - systemproperty
      summary: Find system property by name
      description: Find system property
      operationId: findSystemProperty
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemProperty"
    post:
      tags:
        - systemproperty
      summary: Save the system property
      description: Save the system property
      operationId: saveSystemProperty
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemProperty"
  "/systemproperty/{id}":
    delete:
      tags:
        - systemproperty
      summary: Delete system property by id
      description: Detes the given system property according to the given id
      operationId: deleteSystemProperty
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
  /tagcluster:
    get:
      tags:
        - tagcluster
      summary: Fetches all tagclusters for a cug
      description: This method will return a list off all tagclusters for a cug
      operationId: findByCug
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TagCluster"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - tagcluster
      summary: Save the tagcluster
      description: This method will persist the given tag cluster
      operationId: saveTagCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagCluster"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagCluster"
      security:
        - WebIDM-Access-Token:
            []
  /tag:
    get:
      tags:
        - tag
      summary: Fetches all tags for the given workrelation
      description: This method will return a list off all tags for a workrelation sorted by
        cluster name and tag name
      operationId: findTags
      parameters:
        - name: workrelationUuid
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tag"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - tag
      summary: Save the tag
      description: This method will create the given tag
      operationId: createTag
      requestBody:
        $ref: "#/components/requestBodies/Tag"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
      security:
        - WebIDM-Access-Token:
            []
  "/tag/{uuid}":
    put:
      tags:
        - tag
      summary: Updates the tag
      description: This method will update the given tag
      operationId: saveTag
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Tag"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
      security:
        - WebIDM-Access-Token:
            []
  /targetsystem:
    get:
      tags:
        - targetsystem
      summary: Looks up Target System by name
      description: Returns the Target System when found.
      operationId: getTargetSystemByName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetSystem"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - targetsystem
      summary: Create the targetSystem
      description: This method will create the given target system
      operationId: createTargetSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetSystem"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetSystem"
      security:
        - WebIDM-Access-Token:
            []
  /targetsystem/stringified:
    get:
      tags:
        - targetsystem
      summary: Looks up Target System as a string by name
      description: Returns the Target System as a string when found.
      operationId: getTargetSystemByNameAsString
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - WebIDM-Access-Token:
            []
  /targetsystem/findAll:
    get:
      tags:
        - targetsystem
      summary: Fetch all target systems
      description: This method will return a list of targetsystems
      operationId: findAllTargetSystems
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TargetSystem"
      security:
        - WebIDM-Access-Token:
            []
  "/targetsystem/{uuid}":
    get:
      tags:
        - targetsystem
      summary: Looks up Target System id
      description: Returns the Target System when found.
      operationId: getTargetSystem
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetSystem"
      security:
        - WebIDM-Access-Token:
            []
  /translation/search:
    get:
      tags:
        - translation
      summary: Search for Translations by criteria
      description: This method will return a searchresult containing the results of the view
      operationId: findTranslations
      parameters:
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: keyOperation
          in: query
          required: false
          schema:
            type: string
        - name: translation
          in: query
          required: false
          schema:
            type: string
        - name: translationOperation
          in: query
          required: false
          schema:
            type: string
        - name: locale
          in: query
          required: false
          schema:
            type: string
        - name: cug
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
  "/translation/delete/{id}":
    delete:
      tags:
        - translation
      summary: Delete Translation
      description: This method will delet the given Translation object.
      operationId: deleteTranslation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
  "/translation/{key}":
    put:
      tags:
        - translation
      summary: Update the message
      description: This method will update the given message
      operationId: updateMessage
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: locale
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Message"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
  /translation:
    get:
      tags:
        - translation
      summary: Fetches all messages for given locale
      description: "This method will return a list off all messages(keym value pair) for
        given locale. Locale should contain language, country and CUG as variant
        i.e. nl_BE_OV "
      operationId: getMessages
      parameters:
        - name: locale
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
    post:
      tags:
        - translation
      summary: Save the translated message
      description: This method will persist the given message
      operationId: saveMessage
      parameters:
        - name: locale
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Message"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
  /translation/bulk:
    post:
      tags:
        - translation
      summary: Save the translated message
      description: This method will persist the given message
      operationId: saveMessages
      parameters:
        - name: locale
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Message"
        description: messages
      responses:
        default:
          description: successful operation
  "/virtualidentity/{uuid}/account":
    get:
      tags:
        - virtualidentity
      summary: Fetch all resource accounts
      description: This method will return a list of resource accounts from a virtual
        identity
      operationId: getUserAccounts
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountStatus"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/targetSystem/{virtualIdentityuuid}/{targetSystemName}":
    get:
      tags:
        - virtualidentity
      summary: Fetch all resource accounts
      description: This method will return a list of resource accounts from a virtual
        identity
      operationId: getUserAccountsInTargetSystem
      parameters:
        - name: virtualIdentityuuid
          in: path
          required: true
          schema:
            type: string
        - name: targetSystemName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountStatus"
      security:
        - WebIDM-Access-Token:
            []
  /virtualidentity/bulk:
    put:
      tags:
        - virtualidentity
      summary: Save the virtual identity
      description: This method will persist the given virtual identity
      operationId: saveVirtualIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualIdentityWrapper"
        required: true
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /virtualidentity:
    get:
      tags:
        - virtualidentity
      summary: Search a virtual identity by its civil register number and closed user
        group code
      description: ""
      operationId: getVirtualIdentity
      parameters:
        - name: rrn
          in: query
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualIdentity"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - virtualidentity
      summary: Create the virtual identity
      description: This method will create the given virtual identity
      operationId: createVirtualIdentity
      requestBody:
        $ref: "#/components/requestBodies/VirtualIdentity"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualIdentity"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/{uuid}":
    get:
      tags:
        - virtualidentity
      summary: Fetch a virtual identity based on its unique identifier
      description: This method will return the virtual identity with the given unique
        identifier
      operationId: getVirtualIdentityByUuid
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualIdentity"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - virtualidentity
      summary: Update the virtual identity
      description: This method will update the given virtual identity
      operationId: updateVirtualIdentity
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/VirtualIdentity"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualIdentity"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/getname/{uuid}":
    get:
      tags:
        - virtualidentity
      summary: Fetch a virtual identity concatenated name and surname only based on its
        unique identifier
      description: This method will return concatenated name and surname of the virtual
        identity  with the given unique identifier. This method is not secured.
      operationId: getNameAndSurname
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - WebIDM-Access-Token:
            []
  /virtualidentity/regulation:
    post:
      tags:
        - virtualidentity
      summary: Add the regulation accepted date to a virtual identity
      description: This method will set the date of when the user accepted the regulations
      operationId: virtualIdentityAcceptedRegulation
      parameters:
        - name: dateOfRegulationAcceptance
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: uuid
          in: query
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/searchAll/{cug}":
    get:
      tags:
        - virtualidentity
      summary: Search for all cug virtual identities available for a service caller
      description: This method will return a a list of Person DTO  containing the results
        of the view
      operationId: searchAllVirtualIdentities
      parameters:
        - name: cug
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: itemsPerPage
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
      security:
        - WebIDM-Access-Token:
            []
  /virtualidentity/quicksearch:
    get:
      tags:
        - virtualidentity
      summary: Search for virtual identities by criteria
      description: This method will return a searchresult containing the results of the view
      operationId: findVirtualIdentities
      parameters:
        - name: keywords
          in: query
          required: false
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
        - name: advanced
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /virtualidentity/accountstatus/create:
    post:
      tags:
        - virtualidentity
      summary: Create  new accountStatus
      description: This method will create the account for the given virtual identity
      operationId: createAccountStatus
      requestBody:
        $ref: "#/components/requestBodies/AccountStatus"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountStatus"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/accountstatus/update/{uuid}":
    put:
      tags:
        - virtualidentity
      summary: Update the accountstatus
      description: This method will update the given account status
      operationId: updateAccountStatus
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AccountStatus"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountStatus"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/accountstatus/delete/{id}":
    get:
      tags:
        - virtualidentity
      summary: Delete account status
      description: This method will delete the account status
      operationId: deleteAccountStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/accounttype/{targetSystemWuuid}":
    get:
      tags:
        - virtualidentity
      summary: Fetch  account types for targetsystem
      description: This method will return a list of resource accounts from targetSystem
      operationId: getAccountTypesForTargetSystem
      parameters:
        - name: targetSystemWuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountType"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/accountstatusbyid/{id}":
    get:
      tags:
        - virtualidentity
      summary: Fetch an accountstatus
      description: This method will return an accountstatus
      operationId: getAccountStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountStatus"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/{uuid}/passwordenabledaccount":
    get:
      tags:
        - virtualidentity
      summary: Fetch all passwordenabled accounts of a virtualidentity
      description: This method will return a list of resource passwordenabled accounts from
        a virtual identity
      operationId: getPasswordEnabledAccounts
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
        - name: passwordgroup
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountStatus"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/accountstatus/{status}":
    get:
      tags:
        - virtualidentity
      summary: Fetch all resource accounts
      description: This method will return a list of resource accounts from a virtual
        identity
      operationId: getAccountsWithStatus
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountStatus"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/{uuid}/hasPasswordAccount":
    get:
      tags:
        - virtualidentity
      summary: Checks if a user has accounts that are password enabled
      description: This methods checks if a user has accounts with password enabled
      operationId: hasPasswordEnabledAccounts
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/identity/{rrn}":
    get:
      tags:
        - virtualidentity
      summary: Fetch an identity
      description: This method will return an identity
      operationId: getIdentity
      parameters:
        - name: rrn
          in: path
          required: true
          schema:
            type: string
        - name: queryCivilRegister
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
        "500":
          description: Backend exception occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebIdmException"
      security:
        - WebIDM-Access-Token:
            []
  /virtualidentity/findaccounts:
    get:
      tags:
        - virtualidentity
      summary: Fetch all resource accounts
      description: This method will return a list of resource accounts based on passed
        criteria
      operationId: findAccounts
      parameters:
        - name: situation
          in: query
          required: false
          schema:
            type: string
        - name: situationOperation
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: targetSystemName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /virtualidentity/search:
    post:
      tags:
        - virtualidentity
      summary: Search for virtual identities by criteria
      description: This method will return a searchresult containing the results of the view
      operationId: searchVirtualIdentities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualIdentitySearchCriteria"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  "/virtualidentity/{wuuid}/state":
    put:
      tags:
        - virtualidentity
      summary: Update the state of a virtual identity
      description: Update the status of the given Virtual Identity to the given State.
      operationId: updateState
      parameters:
        - name: wuuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateStateBody"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /virtualidentity/validate:
    post:
      tags:
        - virtualidentity
      summary: Validate the virtual identity
      description: This method will validate the given virtual identity
      operationId: validateVirtualIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualIdentity"
        required: true
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/search:
    post:
      tags:
        - workrelation
      summary: Search for workrelations by criteria
      description: Gives a result page for workrelations matching the search criteria
      operationId: searchWorkrelations
      requestBody:
        $ref: "#/components/requestBodies/WorkRelationSearchCriteria"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  "/workrelation/{uuid}":
    get:
      tags:
        - workrelation
      summary: Looks up workrelation id
      description: Returns the workrelation when found.
      operationId: getWorkrelation
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRelation"
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - workrelation
      summary: Updates the workrelation
      description: This method will update the given workrelation
      operationId: updateWorkrelation
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/WorkRelation"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRelation"
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - workrelation
      summary: Delete workrelation
      description: This method will archive the given workrelation object.
      operationId: deleteWorkrelation
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
        - name: removalReason
          in: query
          required: false
          schema:
            type: string
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /workrelation:
    get:
      tags:
        - workrelation
      summary: Find workrelations
      description: "When the list of UUIDs is set, these exact Workrelations are retrieved.
        If one of them doesn't exist, a 404 Not Found exception is thrown. When
        the virtualIdentityUuid, the organisationUuid and the optional tagUuids
        are passed, the system looks up the single workrelation. When the
        virtualidentity parameter is passed, the system looks up all
        Workrelations for a Virtual Identity by its UUID. "
      operationId: getWorkrelations
      parameters:
        - name: virtualIdentityUuid
          in: query
          required: false
          schema:
            type: string
        - name: organisationUuid
          in: query
          required: false
          schema:
            type: string
        - name: tagUuids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: uuids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkRelation"
      security:
        - WebIDM-Access-Token:
            []
    post:
      tags:
        - workrelation
      summary: Save the workrelation
      description: This method will persist the given workrelation
      operationId: createWorkrelation
      requestBody:
        $ref: "#/components/requestBodies/WorkRelation"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRelation"
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/bulk:
    put:
      tags:
        - workrelation
      summary: Save the workrelation
      description: This method will persist the given workrelation
      operationId: saveWorkrelation
      requestBody:
        $ref: "#/components/requestBodies/WorkRelationWrapper"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRelation"
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/getAllUserWorkrelationsWithoutProperties:
    get:
      tags:
        - workrelation
      summary: Find workrelations
      description: "When the list of UUIDs is set, these exact Workrelations are retrieved.
        If one of them doesn't exist, a 404 Not Found exception is thrown. When
        the virtualIdentityUuid, the organisationUuid and the optional tagUuids
        are passed, the system looks up the single workrelation. When the
        virtualidentity parameter is passed, the system looks up all
        Workrelations for a Virtual Identity by its UUID. "
      operationId: getAllUserWorkrelationsWithoutProperties
      parameters:
        - name: virtualIdentityUuid
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkRelation"
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/searchFilteredWithRightToAddEntitlement:
    post:
      tags:
        - workrelation
      summary: Search for workrelations by criteria
      description: Gives a result page for workrelations matching the search criteria and
        filtered with rights  to create entitlement
      operationId: searchWorkrelationsWhereUserHasRightToAddEntitlement
      requestBody:
        $ref: "#/components/requestBodies/WorkRelationSearchCriteria"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/searchbyorg:
    get:
      tags:
        - workrelation
      summary: Search for workrelations by criteria and page
      description: Gives a result page for workrelations matching the search criteria
      operationId: searchWorkrelationsByOrgCode
      parameters:
        - name: orgCode
          in: query
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: itemsPerPage
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sortOrder
          in: query
          required: true
          schema:
            type: string
        - name: sortProperty
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonWithWorkRelationSearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/searchByOrganisationAndSearchTerm:
    get:
      tags:
        - workrelation
      summary: Search for workrelations by searchTerm, organisation code and page
        criteria
      description: Gives back all matching persons with their workRelations and attributes
        for pagination
      operationId: searchWorkrelationsByOrgCodeAndSearchTerm
      parameters:
        - name: orgCode
          in: query
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: searchTerm
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: itemsPerPage
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sortOrder
          in: query
          required: true
          schema:
            type: string
        - name: sortProperty
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonWithWorkRelationSearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/archive:
    put:
      tags:
        - workrelation
      summary: Archive workrelation
      description: This method will archive the given workrelation object.
      operationId: archiveWorkrelation
      requestBody:
        $ref: "#/components/requestBodies/WorkRelationWrapper"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/workrelation/extendperiod/{uuid}":
    put:
      tags:
        - workrelation
      summary: Updates the workrelation
      description: This method will update the given workrelation
      operationId: extendWorkrelationAndEntitlementPeriod
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/WorkRelation"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRelation"
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/pause_resume:
    get:
      tags:
        - workrelation
      summary: Pauses or resumes  many workrelations at once
      description: "This method will pause or resume the given workrelations "
      operationId: setEnabledFlag
      parameters:
        - name: uuids
          in: query
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: reason
          in: query
          required: false
          schema:
            type: string
        - name: enabled
          in: query
          required: true
          schema:
            type: boolean
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /workrelation/validate:
    post:
      tags:
        - workrelation
      summary: Validate the workrelation
      description: This method will validate the given workrelation
      operationId: validateWorkrelation
      requestBody:
        $ref: "#/components/requestBodies/WorkRelation"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /workflow/unapprovedrequest:
    get:
      tags:
        - workflow
      summary: Retrieve unapproved workflow requests
      description: This method will return the unapproved workflow requests for a given
        approver if specified, otherwise fetch all
      operationId: getUnapprovedWorkflowRequest
      parameters:
        - name: roleNameorApproverUuid
          in: query
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: orgCode
          in: query
          required: false
          schema:
            type: string
        - name: context
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkflowTaskWrapper"
      security:
        - WebIDM-Access-Token:
            []
  /workflow/numberOfUnapprovedTasks:
    get:
      tags:
        - workflow
      summary: Retrieve number of unapproved activiti tasks for the logged on user
      description: This method will return the number of unapproved activiti tasks
      operationId: getNumberOfUnapprovedWorkflowTasks
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
      security:
        - WebIDM-Access-Token:
            []
  /workflow/completeapproval:
    put:
      tags:
        - workflow
      summary: Complete workflow approval tasks
      description: This method will approve or dissaprove workflow approval tasks for a
        given workflow request and approver
      operationId: completeWorkflowRequestTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowApproval"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - WebIDM-Access-Token:
            []
  "/workflow/search_vi/{entitlementName}":
    get:
      tags:
        - workflow
      summary: Fetch all virtualIdentities with a given entitlement for a cug and
        organisation
      description: This method will return virtual identities
      operationId: getVirtualIdentitiesByEntitlementName
      parameters:
        - name: entitlementName
          in: path
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: orgCode
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VirtualIdentity"
  "/workflow/search_er/{virtualIdentityUuid}":
    get:
      tags:
        - workflow
      summary: Fetch all entitlements for a virtual identity
      description: This method will return entitlement registrations
      operationId: getEntitlementsByVirtualIdentityUuid
      parameters:
        - name: virtualIdentityUuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntitlementRegistration"
  "/workflow/{uuid}":
    put:
      tags:
        - workflow
      summary: Update workflow request
      description: This method will update workflow request object.
      operationId: saveWorkflowRequest
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowRequest"
        required: true
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
    delete:
      tags:
        - workflow
      summary: Delete workflow request
      description: This method will archive the given workflow request object.
      operationId: deleteWorkflowRequest
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/workflow/checkAutoApprove/{id}":
    get:
      tags:
        - workflow
      summary: Checks if the workflow must be auto approved
      description: This method checks if the workflow needs to be auto approved e.g. in
        case decrease of workrelation validity period
      operationId: checkAutoApproveWorkflowRequest
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
  "/workflow/request/{conceptUuid}/workflowid":
    post:
      tags:
        - workflow
      summary: Set the activiti workflow id of a workflow request
      description: This method will fill in the activiti workflow id of the workflow
        request object
      operationId: setWorkflowId
      parameters:
        - name: conceptUuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateStateBody"
      responses:
        default:
          description: successful operation
  /workflow/search:
    get:
      tags:
        - workflow
      summary: Search for workflow requests by criteria
      description: This method will return a searchresult containing the results of the view
      operationId: findWorkflowRequests
      parameters:
        - name: workflowRequestStatus
          in: query
          required: false
          schema:
            type: string
        - name: workflowStatus
          in: query
          required: false
          schema:
            type: string
        - name: workflowRequestStatusDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: cugCode
          in: query
          required: false
          schema:
            type: string
        - name: orgCode
          in: query
          required: false
          schema:
            type: string
        - name: conceptType
          in: query
          required: false
          schema:
            type: string
        - name: conceptWuuid
          in: query
          required: false
          schema:
            type: string
        - name: conceptAction
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
        - name: sortProperty
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
  /workflow/request:
    get:
      tags:
        - workflow
      summary: Retrieve pending uuids of workflow requests in a certain status
      description: This method will return the workflow requests that have the matching
        status, there is a logic to filter out locked concepts
      operationId: getPendingWorkflowRequests
      parameters:
        - name: workflowRequestStatus
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
  "/workflow/request/{id}":
    get:
      tags:
        - workflow
      summary: Retrieve the workflow request with the given id
      description: This method retrieves the workflow request object with the given id
      operationId: getWorkflowRequest
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowRequest"
    put:
      tags:
        - workflow
      summary: Update a workflow request
      description: This method will update the workflow request object
      operationId: updateWorkflowRequest
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowRequest"
      responses:
        default:
          description: successful operation
  "/workflow/search_childorg/{approvalRole}":
    get:
      tags:
        - workflow
      summary: Fetch all child organisations cug and organisation
      description: This method will return child organisations if the property on the
        approval Role (composite entitlement) regarding child organisations is
        set
      operationId: getChildOrganisationsBasedOnCompositeEntitlementProperty
      parameters:
        - name: approvalRole
          in: path
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: orgCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organisation"
  "/workflow/search_childorgcodes/{approvalRole}":
    get:
      tags:
        - workflow
      summary: Fetch all child organisations cug and organisation
      description: This method will return child organisation codes  if the property on the
        approval Role (composite entitlement) regarding child organisations is
        set
      operationId: getChildOrganisationCodesBasedOnCompositeEntitlementProperty
      parameters:
        - name: approvalRole
          in: path
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: orgCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /workflow/check:
    get:
      tags:
        - workflow
      summary: Wakes up the workflow engine
      description: Wakes up the workflow engine
      operationId: check
      responses:
        default:
          description: successful operation
  /entitlementdto/construct:
    get:
      tags:
        - entitlementdto
      summary: Constructs  and returns entitlement transfer object for entitlement
        wizard
      description: ""
      operationId: getEntitlementDto
      parameters:
        - name: workrelationWuuid
          in: query
          required: false
          schema:
            type: string
        - name: compositeEntitlementWuuid
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/EntitlementDto"
      security:
        - WebIDM-Access-Token:
            []
  /entitlementdto/validate:
    post:
      tags:
        - entitlementdto
      summary: Validate the entitlement registration dto object
      description: This method will validate the given entitlement registration dto
      operationId: validateEntitlementDto
      requestBody:
        $ref: "#/components/requestBodies/EntitlementDto"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  /entitlementdto:
    post:
      tags:
        - entitlementdto
      summary: Create the entitlement registration
      description: This method will create the given entitlement registration out of passed
        EntitlementDto object
      operationId: createEntitlementDto
      requestBody:
        $ref: "#/components/requestBodies/EntitlementDto"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementDto"
      security:
        - WebIDM-Access-Token:
            []
  "/person/searchAll/{cug}":
    get:
      tags:
        - person
      summary: Search for all cug virtual identities available for a service caller
      description: This method will return a PersonSearchResult which contains data for
        pagination and all selected persons
      operationId: searchAllPersons
      parameters:
        - name: cug
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: itemsPerPage
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sortOrder
          in: query
          required: true
          schema:
            type: string
        - name: sortProperty
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonSearchResult"
      security:
        - WebIDM-Access-Token:
            []
  "/person/searchAllOnFirstOrLastName/{cug}":
    get:
      tags:
        - person
      summary: Search for all cug virtual identities available for a service caller
        given a search query for first or lastName
      description: This method will return a PersonSearchResult which contains data for
        pagination and all persons that match your searchQuery
      operationId: searchAllOnFirstOrLastNameGivenACug
      parameters:
        - name: searchQuery
          in: query
          required: true
          schema:
            type: string
        - name: cug
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: itemsPerPage
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: sortOrder
          in: query
          required: true
          schema:
            type: string
        - name: sortProperty
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonSearchResult"
      security:
        - WebIDM-Access-Token:
            []
  /person/searchuserbywuuid:
    get:
      tags:
        - person
      summary: "Search for "
      description: This method will return a Person DTO
      operationId: searchUserByWuuid
      parameters:
        - name: wuuid
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
      security:
        - WebIDM-Access-Token:
            []
  /person/searchbycugandssn:
    get:
      tags:
        - person
      summary: "Search for "
      description: This method will return a a list of Person DTO  containing the results
        of the view
      operationId: searchByCugAndSsn
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: ssn
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
      security:
        - WebIDM-Access-Token:
            []
  /person/searchuseradministrablebycugandwuuid:
    get:
      tags:
        - person
      summary: "Search for "
      description: This method will return a a list of Person DTO  containing the results
        of the view
      operationId: searchUserAdministrableByCugAndSsn
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: ssn
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
      security:
        - WebIDM-Access-Token:
            []
  /person/retrievefromvkbp:
    get:
      tags:
        - person
      summary: "Search for "
      description: This method will return a a list of Person DTO  containing the results
        of the view
      operationId: retrieveFromVkbp
      parameters:
        - name: ssn
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
      security:
        - WebIDM-Access-Token:
            []
  /person/createpersonwithworkrelation:
    post:
      tags:
        - person
      summary: Create the VirtualIdentity and Workrelation
      description: This method will create VirtualIdentity and Workrelation out of passed
        PersonWithWorkrelation object
      operationId: createVirtualIdentityAndWorkrelation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonWithWorkrelation"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonWithWorkrelation"
      security:
        - WebIDM-Access-Token:
            []
  /person:
    post:
      tags:
        - person
      summary: Create the VirtualIdentity
      description: This method will create VirtualIdentity out of passed Person object
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
      security:
        - WebIDM-Access-Token:
            []
  /workrelationdto/searchbyvi:
    get:
      tags:
        - workrelationdto
      summary: Search for workrelations by criteria
      description: Gives a result page for workrelations matching the search criteria
      operationId: searchWorkrelationsByViWuuid
      parameters:
        - name: virtualIdentityWuuid
          in: query
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkRelationDto"
      security:
        - WebIDM-Access-Token:
            []
  /workrelationdto/searchbyviandconstructnew:
    get:
      tags:
        - workrelationdto
      summary: "Search for user workrelations "
      description: Returns a mix of all user Workrelations and newly constructed
        Workrelations for all possible organisations available for a requestor
      operationId: getAllPossibleWorkrelationsForAUser
      parameters:
        - name: virtualIdentityWuuid
          in: query
          required: true
          schema:
            type: string
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkRelationDto"
      security:
        - WebIDM-Access-Token:
            []
  /workrelationdto/construct:
    get:
      tags:
        - workrelationdto
      summary: Constructs  and returns workrelation transfer object for entitlement
        wizard
      description: ""
      operationId: constructWorkrelationDto
      parameters:
        - name: cugCode
          in: query
          required: true
          schema:
            type: string
        - name: organisationCode
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/WorkRelationDto"
      security:
        - WebIDM-Access-Token:
            []
  /workrelationdto:
    post:
      tags:
        - workrelationdto
      summary: Create the workrelation
      description: This method will create the given entitlement registration out of passed
        WorkRelationDto object
      operationId: createWorkrelationDto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkRelationDto"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkRelationDto"
      security:
        - WebIDM-Access-Token:
            []
  /password/changePassword:
    post:
      tags:
        - password
      summary: ""
      description: ""
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsWherePasswordChangedFor"
      security:
        - WebIDM-Access-Token:
            []
  "/password/generatePassword/{targetSystemWuuid}/{virtualIdentityWuuid}":
    get:
      tags:
        - password
      summary: ""
      description: ""
      operationId: generatePasswordForTargetSystem
      parameters:
        - name: targetSystemWuuid
          in: path
          required: true
          schema:
            type: string
        - name: virtualIdentityWuuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security:
        - WebIDM-Access-Token:
            []
  "/password/getFrontendPasswordRules/{targetSystemUuid}":
    get:
      tags:
        - password
      summary: ""
      description: ""
      operationId: getFrontendPasswordRulesForTargetSystem
      parameters:
        - name: targetSystemUuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FrontendPasswordRules"
      security:
        - WebIDM-Access-Token:
            []
  /provisioningConfiguration/fieldConfiguration/findAll:
    get:
      tags:
        - provisioningConfiguration
      summary: Find all provisioningFieldConfiguration
      description: ""
      operationId: findFieldExclusionConfigurationBy
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RestProvisioningFieldExclusionConfigu\
                    ration"
      security:
        - WebIDM-Access-Token:
            []
  /provisioningConfiguration/fieldConfiguration:
    post:
      tags:
        - provisioningConfiguration
      summary: Create provisioningFieldConfiguration
      description: ""
      operationId: saveFieldExclusionConfiguration
      requestBody:
        $ref: "#/components/requestBodies/RestProvisioningFieldExclusionConfigurati\
          on"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
    put:
      tags:
        - provisioningConfiguration
      summary: "Update provisioningFieldConfiguration "
      description: ""
      operationId: updateFieldExclusionConfiguration
      requestBody:
        $ref: "#/components/requestBodies/RestProvisioningFieldExclusionConfigurati\
          on"
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
  "/provisioningConfiguration/fieldConfiguration/{identifier}":
    delete:
      tags:
        - provisioningConfiguration
      summary: Deleting a provisioningFieldConfiguration
      description: ""
      operationId: deleteFieldExclusionConfiguration
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
      security:
        - WebIDM-Access-Token:
            []
servers:
  - url: /dcs/api
components:
  requestBodies:
    Message:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
    EntitlementContext:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EntitlementContext"
      required: true
    OrganisationTypeAssignmentWrapper:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrganisationTypeAssignmentWrapper"
      required: true
    BasicEntitlement:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BasicEntitlement"
      required: true
    CompositeEntitlement:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CompositeEntitlement"
      required: true
    Organisation:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Organisation"
      required: true
    Tag:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Tag"
      required: true
    OrganisationTypeWrapper:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrganisationTypeWrapper"
      required: true
    updateStateBody:
      content:
        application/json:
          schema:
            type: string
    WorkRelationSearchCriteria:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WorkRelationSearchCriteria"
    WorkRelationWrapper:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WorkRelationWrapper"
      required: true
    ClosedUserGroup:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClosedUserGroup"
      required: true
    makeEntitlementsXml:
      content:
        application/json:
          schema:
            type: string
      required: true
    EntitlementRegistration:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EntitlementRegistration"
      required: true
    EntitlementWrapper:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EntitlementWrapper"
      required: true
    EntitlementRegistrationSearchCriteria:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EntitlementRegistrationSearchCriteria"
    NotificationTemplate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationTemplate"
      required: true
    OrganisationTypeAssignment:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrganisationTypeAssignment"
      required: true
    OrganisationType:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrganisationType"
      required: true
    Scheduler:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Scheduler"
    SelfRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SelfRequest"
      required: true
    VirtualIdentity:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VirtualIdentity"
    AccountStatus:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccountStatus"
    WorkRelation:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WorkRelation"
      required: true
    EntitlementDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EntitlementDto"
      required: true
    RestProvisioningFieldExclusionConfiguration:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RestProvisioningFieldExclusionConfiguration"
      required: true
  securitySchemes:
    WebIDM-Access-Token:
      description: ""
      type: apiKey
      name: WebIDM-Access-Token
      in: header
  schemas:
    AccessPermissions:
      type: object
      properties:
        permissions:
          type: object
          readOnly: true
          additionalProperties:
            type: boolean
    AccountType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        targetSystem:
          $ref: "#/components/schemas/TargetSystem"
        name:
          type: string
        passwordEnabled:
          type: boolean
        voIdvKey:
          type: string
        accountgenerator:
          type: string
        generatorprefix:
          type: string
        generatorfixed:
          type: string
        addAccountTypeToUrl:
          type: boolean
    AccountTypeUsage:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        accountType:
          $ref: "#/components/schemas/AccountType"
        basicEntitlement:
          $ref: "#/components/schemas/BasicEntitlement"
        id:
          type: integer
          format: int64
        tagPrerequisites:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/TagPrerequisite"
        organisationPrerequisites:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/OrganisationPrerequisite"
        organisationTypePrerequisites:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/OrganisationTypePrerequisite"
        compositeEntitlementPrerequisites:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/CompositeEntitlementPrerequisite"
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    ApplicationNumber:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          properties:
            name:
              type: string
            id:
              type: string
            status:
              type: string
              enum:
                - ACTIVE
                - INACTIVE
    BasicEntitlement:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - description
            - name
          properties:
            name:
              type: string
            description:
              type: string
            priority:
              type: integer
              format: int32
            targetSystem:
              $ref: "#/components/schemas/TargetSystem"
            compositeEntitlements:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/CompositeEntitlement"
            expressionLanguageHandlers:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/ELHandler"
            javaClassHandlers:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/JavaClassHandler"
            accountTypeUsage:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/AccountTypeUsage"
    ClosedUserGroup:
      type: object
      required:
        - code
        - conceptState
        - name
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        type:
          type: string
          enum:
            - "NULL"
            - IDENTITY
            - VIRTUALIDENTITY
            - CUG
            - WORKRELATION
            - ORGANISATION
            - ORGANISATIONTYPE
            - ORGANISATIONTYPEASSIGNMENT
            - TAG
            - TAGCLUSTER
            - BASICENTITLEMENT
            - COMPOSITEENTITLEMENT
            - ENTITLEMENTREGISTRATION
            - ENTITLEMENTASSIGNMENT
            - TARGETSYSTEM
            - SELFREQUEST
            - APPLICATIONNUMBER
            - ALL
        wuuid:
          type: string
        conceptState:
          type: string
          enum:
            - REQUESTED
            - REGISTERED
            - ACTIVE
            - LOCKED
            - DEACTIVATED
            - ARCHIVED
            - EXPIRED
            - PAUSED
        properties:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/Property"
        settingAssignments:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/SettingAssignment"
        propertyAssignments:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/PropertyAssignment"
        accessPermissions:
          $ref: "#/components/schemas/AccessPermissions"
        name:
          type: string
        code:
          type: string
        tagClusters:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/TagCluster"
        fieldNames:
          type: array
          items:
            type: string
        propertyNames:
          type: array
          uniqueItems: true
          items:
            type: string
        propertyDefinitions:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/PropertyDefinition"
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    CompositeEntitlement:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - confirmationMessage
            - cug
            - description
            - displayName
            - maxAssignmentTime
            - multiRegistrations
            - name
          properties:
            name:
              type: string
            tagPrerequisiteNames:
              type: array
              uniqueItems: true
              items:
                type: string
            displayName:
              type: string
            maxAssignmentTime:
              type: integer
              format: int32
            description:
              type: string
            confirmationMessage:
              type: string
            multiRegistrations:
              type: boolean
            cug:
              $ref: "#/components/schemas/ClosedUserGroup"
            cugWuuid:
              type: string
            basicEntitlements:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/BasicEntitlement"
            compositeEntitlementPrerequisites:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/CompositeEntitlementPrerequisite"
            organisationPrerequisites:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/OrganisationPrerequisite"
            organisationTypePrerequisites:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/OrganisationTypePrerequisite"
            tagPrerequisites:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/TagPrerequisite"
            propertyPrerequisites:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/PropertyPrerequisite"
            transientlastRetrieved:
              type: integer
              format: int64
            shareable:
              type: boolean
    CompositeEntitlementPrerequisite:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        name:
          type: string
        requiredCompositeEntitlement:
          $ref: "#/components/schemas/CompositeEntitlement"
        compositeEntitlement:
          $ref: "#/components/schemas/CompositeEntitlement"
        accountTypeUsage:
          $ref: "#/components/schemas/AccountTypeUsage"
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    Concept:
      type: object
      required:
        - conceptState
      discriminator:
        propertyName: type
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        type:
          type: string
          enum:
            - "NULL"
            - IDENTITY
            - VIRTUALIDENTITY
            - CUG
            - WORKRELATION
            - ORGANISATION
            - ORGANISATIONTYPE
            - ORGANISATIONTYPEASSIGNMENT
            - TAG
            - TAGCLUSTER
            - BASICENTITLEMENT
            - COMPOSITEENTITLEMENT
            - ENTITLEMENTREGISTRATION
            - ENTITLEMENTASSIGNMENT
            - TARGETSYSTEM
            - SELFREQUEST
            - APPLICATIONNUMBER
            - ALL
        wuuid:
          type: string
        conceptState:
          type: string
          enum:
            - REQUESTED
            - REGISTERED
            - ACTIVE
            - LOCKED
            - DEACTIVATED
            - ARCHIVED
            - EXPIRED
            - PAUSED
        properties:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/Property"
        settingAssignments:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/SettingAssignment"
        propertyAssignments:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/PropertyAssignment"
        accessPermissions:
          $ref: "#/components/schemas/AccessPermissions"
        propertyNames:
          type: array
          uniqueItems: true
          items:
            type: string
        propertyDefinitions:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/PropertyDefinition"
        fieldNames:
          type: array
          items:
            type: string
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    ELHandler:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        script:
          type: string
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    EntitlementAssignment:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - compositeEntitlement
          properties:
            compositeEntitlement:
              $ref: "#/components/schemas/CompositeEntitlement"
            compositeEntitlementWuuid:
              type: string
            entitlementRegistrations:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/EntitlementRegistration"
            master:
              $ref: "#/components/schemas/EntitlementRegistration"
    EntitlementRegistration:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - entitlementAssignment
            - period
            - workRelation
          properties:
            master:
              type: boolean
            period:
              $ref: "#/components/schemas/Period"
            workRelation:
              $ref: "#/components/schemas/WorkRelation"
            entitlementAssignment:
              $ref: "#/components/schemas/EntitlementAssignment"
            enabled:
              type: boolean
    Identity:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - identificationNumber
          properties:
            identificationNumber:
              type: string
            virtualIdentities:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/VirtualIdentity"
            dateOfRegulationApproval:
              type: string
              format: date-time
    JavaClassHandler:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
        className:
          type: string
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    NaturalRange:
      type: object
      properties:
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
    Organisation:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - closedUserGroup
            - code
            - name
          properties:
            name:
              type: string
            code:
              type: string
            closedUserGroup:
              $ref: "#/components/schemas/ClosedUserGroup"
            searchFields:
              type: string
              readOnly: true
            shortName:
              type: string
              readOnly: true
            socialName:
              type: string
              readOnly: true
            cugWuuid:
              type: string
            kboNumber:
              type: string
            parentOrganisations:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/Organisation"
            childOrganisations:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/Organisation"
            organisationTypeAssignments:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/OrganisationTypeAssignment"
            organisationTypeCodes:
              type: array
              readOnly: true
              uniqueItems: true
              items:
                type: string
    OrganisationPrerequisite:
      type: object
      required:
        - childOrganisationsAllowed
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        criteria:
          type: string
        organisation:
          $ref: "#/components/schemas/Organisation"
        compositeEntitlement:
          $ref: "#/components/schemas/CompositeEntitlement"
        accountTypeUsage:
          $ref: "#/components/schemas/AccountTypeUsage"
        childOrganisationsAllowed:
          type: boolean
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    OrganisationType:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - closedUserGroup
            - code
          properties:
            code:
              type: string
            displayName:
              type: string
            closedUserGroup:
              $ref: "#/components/schemas/ClosedUserGroup"
    OrganisationTypeAssignment:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - organisationType
          properties:
            organisation:
              $ref: "#/components/schemas/Organisation"
            organisationType:
              $ref: "#/components/schemas/OrganisationType"
    OrganisationTypePrerequisite:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        name:
          type: string
        organisationType:
          $ref: "#/components/schemas/OrganisationType"
        compositeEntitlement:
          $ref: "#/components/schemas/CompositeEntitlement"
        accountTypeUsage:
          $ref: "#/components/schemas/AccountTypeUsage"
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    Period:
      type: object
      required:
        - endDate
        - startDate
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        startDateFormatted:
          type: string
        endDateFormatted:
          type: string
    Property:
      type: object
      required:
        - definition
      properties:
        values:
          type: array
          uniqueItems: true
          items:
            type: string
        id:
          type: integer
          format: int64
        definition:
          $ref: "#/components/schemas/PropertyDefinition"
        concept:
          $ref: "#/components/schemas/Concept"
        propertyValues:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/PropertyValue"
        singleValue:
          type: string
        value:
          type: object
    PropertyAssignment:
      type: object
      required:
        - propertyDefinition
      properties:
        id:
          type: integer
          format: int64
        conceptType:
          type: string
          enum:
            - "NULL"
            - IDENTITY
            - VIRTUALIDENTITY
            - CUG
            - WORKRELATION
            - ORGANISATION
            - ORGANISATIONTYPE
            - ORGANISATIONTYPEASSIGNMENT
            - TAG
            - TAGCLUSTER
            - BASICENTITLEMENT
            - COMPOSITEENTITLEMENT
            - ENTITLEMENTREGISTRATION
            - ENTITLEMENTASSIGNMENT
            - TARGETSYSTEM
            - SELFREQUEST
            - APPLICATIONNUMBER
            - ALL
        propertyDefinition:
          $ref: "#/components/schemas/PropertyDefinition"
        concept:
          $ref: "#/components/schemas/Concept"
    PropertyDefinition:
      type: object
      required:
        - editable
        - name
        - type
        - visible
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        editable:
          type: boolean
        visible:
          type: boolean
        defaultValue:
          type: string
        occurs:
          $ref: "#/components/schemas/NaturalRange"
        type:
          type: string
          enum:
            - STRING
            - DATE
            - EMAIL
            - PHONE
            - KBO_NUMBER
            - BOOLEAN
            - CONTEXT
            - EL
            - ELMAP
        sortingIndex:
          type: integer
          format: int32
        customDisplayComponent:
          type: string
        uniqueValue:
          type: string
        cug:
          $ref: "#/components/schemas/ClosedUserGroup"
        cugWuuid:
          type: string
        values:
          type: array
          uniqueItems: true
          items:
            type: string
        propertyProvider:
          $ref: "#/components/schemas/PropertyProvider"
        propertyAssignments:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/PropertyAssignment"
        dependantPropertyDefinitionId:
          type: integer
          format: int64
        required:
          type: boolean
    PropertyPrerequisite:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        propertyDefinition:
          $ref: "#/components/schemas/PropertyDefinition"
        compositeEntitlement:
          $ref: "#/components/schemas/CompositeEntitlement"
        name:
          type: string
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    PropertyProvider:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - WEBSERVICE
            - WEBSERVICE_EXTENDED
            - RESTSERVICE
        url:
          type: string
        nameSuffix:
          type: string
        displayNameSuffix:
          type: string
        organisationFieldName:
          type: string
        organisationFieldExpression:
          type: string
        configuration:
          type: string
    PropertyValue:
      type: object
      properties:
        id:
          type: integer
          format: int64
        property:
          $ref: "#/components/schemas/Property"
        value:
          type: string
          minLength: 0
          maxLength: 4000
    SelfRequest:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - virtualIdentity
          properties:
            virtualIdentity:
              $ref: "#/components/schemas/VirtualIdentity"
    Setting:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
    SettingAssignment:
      type: object
      required:
        - conceptType
        - setting
        - settingDefinition
      properties:
        id:
          type: integer
          format: int64
        conceptType:
          type: string
          enum:
            - "NULL"
            - IDENTITY
            - VIRTUALIDENTITY
            - CUG
            - WORKRELATION
            - ORGANISATION
            - ORGANISATIONTYPE
            - ORGANISATIONTYPEASSIGNMENT
            - TAG
            - TAGCLUSTER
            - BASICENTITLEMENT
            - COMPOSITEENTITLEMENT
            - ENTITLEMENTREGISTRATION
            - ENTITLEMENTASSIGNMENT
            - TARGETSYSTEM
            - SELFREQUEST
            - APPLICATIONNUMBER
            - ALL
        concept:
          $ref: "#/components/schemas/Concept"
        settingDefinition:
          $ref: "#/components/schemas/SettingDefinition"
        setting:
          $ref: "#/components/schemas/Setting"
    SettingDefinition:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
          enum:
            - WORKFLOW
            - NOTIFICATION
            - SELFREQUEST
            - FRONTEND
            - BACKEND
        settingAssignments:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/SettingAssignment"
    Tag:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - name
          properties:
            name:
              type: string
            defaultSelected:
              type: boolean
            tagCluster:
              $ref: "#/components/schemas/TagCluster"
    TagAssignment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tag:
          $ref: "#/components/schemas/Tag"
        workRelation:
          $ref: "#/components/schemas/WorkRelation"
    TagCluster:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - description
            - name
          properties:
            name:
              type: string
            description:
              type: string
            minSelect:
              type: integer
              format: int32
            maxSelect:
              type: integer
              format: int32
            tags:
              type: array
              items:
                $ref: "#/components/schemas/Tag"
            closedUserGroup:
              $ref: "#/components/schemas/ClosedUserGroup"
            cugWuuid:
              type: string
    TagPrerequisite:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          $ref: "#/components/schemas/Tag"
        compositeEntitlement:
          $ref: "#/components/schemas/CompositeEntitlement"
        accountTypeUsage:
          $ref: "#/components/schemas/AccountTypeUsage"
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    TargetSystem:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - description
            - name
          properties:
            name:
              type: string
            description:
              type: string
            status:
              type: string
            dateChecked:
              type: string
              format: date-time
            dateAlive:
              type: string
              format: date-time
            dateFirstError:
              type: string
              format: date-time
            targetSystemType:
              type: string
            identifierKeyProvisioningView:
              type: string
            accountQueryFilter:
              type: string
            priority:
              type: integer
              format: int32
            pingEnabled:
              type: boolean
            passwordgenerate:
              type: boolean
            passwordgroup:
              type: string
            config:
              type: string
            accountTypes:
              type: array
              readOnly: true
              uniqueItems: true
              items:
                $ref: "#/components/schemas/AccountType"
            passwordEnabled:
              type: boolean
    VirtualIdentity:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - cug
            - identity
          properties:
            wuuidForMigration:
              type: string
            status:
              type: string
              enum:
                - ACTIVE
                - INACTIVE
            needsProvisioning:
              type: boolean
            identity:
              $ref: "#/components/schemas/Identity"
            cug:
              $ref: "#/components/schemas/ClosedUserGroup"
            cugWuuid:
              type: string
            workRelations:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/WorkRelation"
            statusAsBoolean:
              type: boolean
            dateOfRegulationApproval:
              type: string
              format: date-time
    WorkRelation:
      allOf:
        - $ref: "#/components/schemas/Concept"
        - type: object
          required:
            - organisation
            - period
          properties:
            period:
              $ref: "#/components/schemas/Period"
            virtualIdentity:
              $ref: "#/components/schemas/VirtualIdentity"
            organisation:
              $ref: "#/components/schemas/Organisation"
            tagAssignments:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/TagAssignment"
            entitlementRegistrations:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/EntitlementRegistration"
            enabled:
              type: boolean
            tags:
              type: array
              uniqueItems: true
              items:
                $ref: "#/components/schemas/Tag"
    ApplicationNumberWrapper:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    EntityRepresentative:
      type: object
      properties:
        identificationNumber:
          type: string
        emailAddress:
          type: string
        function:
          type: string
        domain:
          type: string
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    EntityRole:
      type: object
      properties:
        organisation:
          type: string
        qualities:
          type: array
          items:
            $ref: "#/components/schemas/Quality"
    Quality:
      type: object
      properties:
        role:
          type: string
        qualityCode:
          type: string
        email:
          type: string
    LightCompositeEntitlement:
      type: object
      properties:
        cugCode:
          type: string
        accessPermissions:
          $ref: "#/components/schemas/AccessPermissions"
        name:
          type: string
        description:
          type: string
        displayName:
          type: string
        wuuid:
          type: string
        properties:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/Property"
    ConceptHistory:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        conceptWuuid:
          type: string
        conceptType:
          type: string
          enum:
            - "NULL"
            - IDENTITY
            - VIRTUALIDENTITY
            - CUG
            - WORKRELATION
            - ORGANISATION
            - ORGANISATIONTYPE
            - ORGANISATIONTYPEASSIGNMENT
            - TAG
            - TAGCLUSTER
            - BASICENTITLEMENT
            - COMPOSITEENTITLEMENT
            - ENTITLEMENTREGISTRATION
            - ENTITLEMENTASSIGNMENT
            - TARGETSYSTEM
            - SELFREQUEST
            - APPLICATIONNUMBER
            - ALL
        conceptAction:
          type: string
          enum:
            - CREATE
            - UPDATE
            - LIST
            - DELETE
            - ARCHIVE
            - VALIDATE
            - SEARCH
        content:
          type: string
        cugCode:
          type: string
        virtualIdentityUuid:
          type: string
        organisationUuid:
          type: string
        organisationName:
          type: string
        organisationCode:
          type: string
        workflowStatus:
          type: string
          enum:
            - APPROVED
            - REJECTED
            - CANCELLED
            - ERROR
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    EntitlementContextData:
      type: object
      properties:
        entitlementName:
          type: string
        orgCode:
          type: string
        contextValues:
          type: object
          additionalProperties:
            type: array
            uniqueItems: true
            items:
              type: string
        entitlementUuid:
          type: string
    Reason:
      type: object
      properties:
        conceptWuuid:
          type: string
        reasonText:
          type: string
        conceptAction:
          type: string
          enum:
            - CREATE
            - UPDATE
            - LIST
            - DELETE
            - ARCHIVE
            - VALIDATE
            - SEARCH
        changeDate:
          type: string
          format: date-time
    SettingAssignmentWrapper:
      type: object
      required:
        - conceptType
        - name
        - settingType
        - value
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
        conceptUuid:
          type: string
        conceptType:
          type: string
        settingType:
          type: string
    AbstractSearchConfiguration:
      type: object
      properties:
        headerKeys:
          type: array
          readOnly: true
          items:
            type: string
        visibilities:
          type: object
          readOnly: true
          additionalProperties:
            type: boolean
    SearchResult:
      type: object
      properties:
        searchResultConfiguration:
          $ref: "#/components/schemas/AbstractSearchConfiguration"
        totalCount:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        sortProperty:
          type: string
        sortDirection:
          type: string
        content:
          type: array
          items:
            type: array
            items:
              type: string
        accessPermissionsMap:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/AccessPermissions"
        conceptIds:
          type: array
          items:
            type: string
    ContextRestServiceResult:
      type: object
      properties:
        displayName:
          type: string
        technicalName:
          type: string
        sortOrder:
          type: integer
          format: int32
    EntitlementContext:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        contextValues:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/EntitlementContextValue"
        activeContextValues:
          type: array
          items:
            $ref: "#/components/schemas/EntitlementContextValue"
    EntitlementContextValue:
      type: object
      required:
        - name
        - value
      properties:
        id:
          type: integer
          format: int64
        entitlementContext:
          $ref: "#/components/schemas/EntitlementContext"
        name:
          type: string
        value:
          type: string
        sortOrder:
          type: integer
          format: int32
        active:
          type: boolean
        type:
          type: string
          enum:
            - DEFAULT
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        createdBy:
          type: string
        modifiedBy:
          type: string
        organisations:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/EntitlementContextValueOrganisation"
        restrictions:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/EntitlementContextValueRestriction"
    EntitlementContextValueOrganisation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        organisationCode:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        createdBy:
          type: string
        modifiedBy:
          type: string
        entitlementContextValue:
          $ref: "#/components/schemas/EntitlementContextValue"
    EntitlementContextValueRestriction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        restrictionExpression:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        createdBy:
          type: string
        modifiedBy:
          type: string
        closedUserGroupCode:
          type: string
        entitlementContextValue:
          $ref: "#/components/schemas/EntitlementContextValue"
    LightEntitlementContext:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
    CacheSize:
      type: object
      properties:
        size:
          type: integer
          format: int64
        hitCount:
          type: integer
          format: int64
        missCount:
          type: integer
          format: int64
        loadSuccessCount:
          type: integer
          format: int64
        loadExceptionCount:
          type: integer
          format: int64
        totalLoadTime:
          type: integer
          format: int64
        evictionCount:
          type: integer
          format: int64
    EntitlementMakerResult:
      type: object
      properties:
        result:
          type: object
          readOnly: true
          additionalProperties:
            type: string
    EntitlementAttribute:
      type: object
      properties:
        name:
          type: string
        required:
          type: boolean
        values:
          type: array
          items:
            type: string
    EntitlementWrapper:
      type: object
      properties:
        cugName:
          type: string
        identificationNumber:
          type: string
        virtualIdentityWuuid:
          type: string
        organizationCode:
          type: string
        entitlementName:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        tags:
          type: object
          additionalProperties:
            type: string
        assignmentValues:
          type: array
          items:
            $ref: "#/components/schemas/EntitlementAttribute"
        master:
          type: boolean
        reason:
          type: string
    EntitlementRegistrationSearchCriteria:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sortDirection:
          type: string
        sortProperty:
          type: string
        advanced:
          type: boolean
        synctoolExport:
          type: boolean
        lastModificationDate:
          type: string
          format: date-time
        lastModificationDateTo:
          type: string
          format: date-time
        lastModificationDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        lastModifiedBy:
          type: string
        lastModifiedByOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        creationDate:
          type: string
          format: date-time
        creationDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        createdBy:
          type: string
        createdByOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        endDateDaysFromNow:
          type: integer
          format: int32
        endDate:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        endDateTo:
          type: string
          format: date-time
        startDateTo:
          type: string
          format: date-time
        cugCode:
          type: string
        organisationCode:
          type: string
        endDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        startDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        organisationUuid:
          type: string
        compositeEntitlementUuid:
          type: string
        contextValues:
          type: array
          items:
            type: string
        state:
          type: array
          items:
            type: string
        organisationTypes:
          type: array
          items:
            type: string
    NotificationTemplate:
      type: object
      required:
        - actionType
        - cug
        - template
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - HTML
            - TEXT
            - XML
        actionType:
          type: string
        cug:
          $ref: "#/components/schemas/ClosedUserGroup"
        template:
          type: string
        cugWuuid:
          type: string
    Notification:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - MAIL
            - SMS
        actionType:
          type: string
        content:
          type: string
        attachment:
          type: array
          items:
            type: string
            format: byte
        attachmentFileName:
          type: string
        notificationIdentifier:
          type: string
        status:
          type: string
          enum:
            - CREATED
            - SENDING
            - FINISHED
            - FINISHED_WITH_ERRORS
        sendDate:
          type: string
          format: date-time
        creationDate:
          type: string
          format: date-time
        subject:
          type: string
    OrganisationTypeAssignmentWrapper:
      type: object
      properties:
        cugCode:
          type: string
        organisationCode:
          type: string
        organisationTypeCode:
          type: string
    OrganisationTypeWrapper:
      type: object
      properties:
        cugName:
          type: string
        displayName:
          type: string
        code:
          type: string
    OrganisationSearchCriteria:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sortDirection:
          type: string
        sortProperty:
          type: string
        advanced:
          type: boolean
        synctoolExport:
          type: boolean
        lastModificationDate:
          type: string
          format: date-time
        lastModificationDateTo:
          type: string
          format: date-time
        lastModificationDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        lastModifiedBy:
          type: string
        lastModifiedByOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        creationDate:
          type: string
          format: date-time
        creationDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        createdBy:
          type: string
        createdByOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        cugCode:
          type: string
        organisationName:
          type: string
        organisationNameOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        organisationCode:
          type: string
        organisationCodeOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        organisationTypes:
          type: array
          items:
            type: string
    LightOrganisation:
      type: object
      properties:
        cugName:
          type: string
        organisationCode:
          type: string
        shortName:
          type: string
        socialName:
          type: string
        name:
          type: string
        searchFields:
          type: string
          readOnly: true
        wuuid:
          type: string
        organisationTypeAssignments:
          type: array
          uniqueItems: true
          items:
            $ref: "#/components/schemas/OrganisationTypeAssignment"
        accessPermissions:
          $ref: "#/components/schemas/AccessPermissions"
    StackTraceElement:
      type: object
      properties:
        methodName:
          type: string
        fileName:
          type: string
        lineNumber:
          type: integer
          format: int32
        className:
          type: string
        nativeMethod:
          type: boolean
    Throwable:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/Throwable"
        stackTrace:
          type: array
          items:
            $ref: "#/components/schemas/StackTraceElement"
        message:
          type: string
        localizedMessage:
          type: string
        suppressed:
          type: array
          items:
            $ref: "#/components/schemas/Throwable"
    ValidationInformation:
      type: object
      properties:
        message:
          type: string
        messageTemplate:
          type: string
        className:
          type: string
        property:
          type: string
        propertyId:
          type: integer
          format: int64
        invalidValue:
          type: string
        annotationAttributes:
          type: object
          additionalProperties:
            type: object
    WebIdmException:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/Throwable"
        stackTrace:
          type: array
          items:
            $ref: "#/components/schemas/StackTraceElement"
        className:
          type: string
        validations:
          type: array
          items:
            $ref: "#/components/schemas/ValidationInformation"
        errorKey:
          type: string
          enum:
            - DATASOURCE_LOOKUP_FAILED
            - PROPERTY_NOT_FOUND
            - CLOSED_USER_GROUP_NOT_FOUND
            - TAG_NOT_FOUND
            - VIRTUAL_INDENTITY_NOT_FOUND
            - ORGANISATION_NOT_FOUND
            - ORGANISATION_ALREADY_EXISTS
            - ORGANISATION_OWN_PARENT
            - PARENT_ORGANISATION_NOT_FOUND
            - CIRCULAR_ORGANISATION_RELATIONSHIP
            - WORKRELATION_NOT_FOUND
            - WORKRELATION_INVALID_PERIOD
            - WORKRELATION_EXPIRED_OR_IN_FUTURE
            - WORKRELATION_STARTDATE_PAST
            - WORKRELATION_DATE_ENDDATE_BEFORE_STARTDATE
            - CONCEPT_LOCKED
            - WORKRELATION_NOT_FOUND_UUID
            - WORKRELATION_WITH_SAME_ORG_AND_OTHER_TAGS_EXISTS
            - WORKRELATION_ALREADY_EXISTS
            - WORKRELATION_DUPLICATE
            - COMPOSITE_ENTITLEMENT_NOT_FOUND
            - COMPOSITE_ENTITLEMENT_NOT_FOUND_ENT_CODE
            - COMPOSITE_ENTITLEMENT_NOT_FOUND_UUID
            - COMPOSITE_ENTITLEMENT_ASSIGNED_TO_VI
            - COMPOSITE_ENTITLEMENT_IS_REQUIRED_PREREQUISITE
            - VIRTUAL_IDENTITY_STATE_UNNKOWN
            - ENTITLEMENT_BUSINESS_VALIDATION
            - UNFULFILLED_ORGANISTAION_PREREQUISITE
            - INVALID_SUB_ORGANISTAION_SETUP
            - UNFULFILLED_ORGANISTAION_TYPE_PREREQUISITE
            - UNFULFILLED_PROPERTY_PREREQUISITE
            - UNFULFILLED_TAG_PREREQUISITE
            - WORKRELATION_TAG_REQUIRED
            - PROPERTY_REQUIRED
            - UNFULFILLED_COMPOSITE_ENTITLEMENT_PREREQUISITE
            - UNFULFILLED_COMPOSITE_ENTITLEMENT_PREREQUISITE_ARCHIVE
            - INVALID_PERIOD_PREREQUISITE
            - INVALID_PERIOD_WORKRELATION
            - INVALID_PERIOD_WORKRELATION_FOR_ENTREG
            - VALIDATION_FAILED
            - CLOSED_USER_GROUP_NOT_SPECIFIED
            - SEARCH_CRITERIA_NOT_SPECIFIED
            - SEARCH_PAGE_INVALID
            - ENTITLEMENT_REGISTRATION_REFERENCE_STATUS_ILLEGAL
            - ENTITLEMENT_ASSIGNMENT_INVALID
            - EXPRESSION_INVALID
            - ENTITLEMENT_REGISTRATION_NUMBER_INCORRECT
            - ENTITLEMENT_REGISTRATION_DATE_INCORRECT_PREREQ
            - ENTITLEMENT_REGISTRATION_DATE_STARTDATE_PAST
            - ENTITLEMENT_REGISTRATION_DATE_ENDDATE_BEFORE_STARTDATE
            - ENTITLEMENT_REGISTRATION_DATE_MAX_END_DATE_EXCEEDED
            - ENTITLEMENT_REGISTRATION_DUPLICATE
            - ENTITLEMENT_REGISTRATION_PAUSE_ERROR
            - ENTITLEMENT_REGISTRATION_SAVE_ERROR
            - ENTITLEMENT_REGISTRATION_NOT_FOUND
            - ENTITLEMENT_REGISTRATION_SET_MASTER_ON_EXPIRED_ERROR
            - ENTITLEMENT_REGISTRATION_PAUSE_FORBIDDEN
            - WORKRELATION_PAUSE_ERROR
            - WORKRELATION_PAUSE_NO_RIGHTS_TO_ALL_ENTITLEMENTS_ERROR
            - ORGANISATION_HAS_CHILDREN
            - CREATE_ORGANISATION_CHILDREN_NOT_ENABLED
            - ORGANISATION_HAS_PARENTS
            - ORGANISATION_HAS_WORKRELATIONS
            - ORGANISATION_HAS_TYPES_ASSIGNED
            - ENTITLEMENT_ASSIGNMENT_ARCHIVE_NOT_ALLOWED
            - INVALID_LOCALE_FORMAT
            - CONTEXT_NOT_FOUND
            - INVALID_CONTEXT_SERVICE_URL
            - INVALID_CONTEXT_VALUE_RESTRICTION
            - EXTERNAL_CONTEXT_SERVICE_NOT_AVAILABLE
            - CONTEXT_SERVICE_RESPONSE_ERROR
            - PROPERTY_PROVIDER_IS_NULL
            - INVALID_MAIL_SERVICE_URL
            - PARAMETERS_NOT_IDENTICAL
            - TARGETSYSTEM_NOT_FOUND
            - BASICENTITLEMENT_NOT_FOUND
            - HANDLER_NOT_FOUND
            - ACCOUNTTYPE_NOT_FOUND_FOR_TARGETSYSTEM
            - INVALID_NUMBER_OF_TAGS
            - ERROR_RETRIEVE_VKBP_USER
            - ERROR_RETRIEVE_VKBO_ORG
            - USER_NOT_FOUND_IN_VKBP
            - VKBP_CONNECTION_ERROR
            - VKBO_CONNECTION_ERROR
            - SETTINGTYPE_NOT_EXIST
            - ORG_RESTRICTION_NOT_EXIST
            - RESTRICTION_NOT_EXIST
            - INVALID_XML
            - DECISION_VALUE_INVALID
            - ACTION_VALUE_INVALID
            - INVALID_CSV
            - CONCEPTTYPE_NOT_EXIST
            - CONCEPT_NOT_FOUND
            - SETTINGASSIGNMENT_NOT_FOUND
            - SETTING_VALUE_IS_NULL
            - SETTINGDEFINITION_NAME_IS_NULL
            - SETTINGTYPE_REQUIRED
            - CONCEPTTYPE_REQUIRED
            - SETTINGASSIGNMENT_ALREADY_EXISTS
            - SETTING_ONE_TYPE_ONLY
            - INVALID_DATE_RANGE
            - INVALID_SEARCH_PARAMS
            - INVALID_ACTION_PARAMS
            - ORGANISATION_TYPE_NOT_FOUND
            - ORGANISATION_TYPE_EXISTS
            - ORGANISATION_TYPE_ASSIGNMENT_NOT_FOUND
            - ORGANISATION_TYPE_ASSIGNMENT_EXISTS
            - DATE_OF_BIRTH_INVALID
            - HANDLER_INVALIDCLASSNAME
            - HANDLER_NOTINTERCHANGEABLE
            - HANDLER_NOTCOMPILABLE
            - INVALID_PERIOD_SELFREQUEST
            - APPLICATIONNUMBER_NOT_EXISTS
            - INVALID_APPLICATIONNUMBER_STATUS
            - DEPENDANT_PROPERTY_NOT_EXISTS
            - BTB_SERVICE_CONNECTION_ERROR
            - BTB_INVALID_CALL
            - BTB_CALL_ERROR
            - BTB_NO_APPROVERS_FOUND
            - CUG_NOT_BTB_ENABLED
            - ORG_CUG_DIFFERS_FROM_USER_CUG
            - INVALID_DEPENDANT_PROPERTY_DEFINITION_TYPE
            - ORGANISATION_EXISTS_IN_OTHER_CUG
            - WORKFLOW_TASK_APPROVAL_NOT_ALLOWED
            - NOTIFICATION_TEMPLATE_NOT_FOUND
            - INVALID_NOTIFICATIONTEMPLATE_TYPE
            - INVALID_SCHEDULER_TYPE
            - ORGANISATION_TYPE_PREREQUISITE_VIOLATION
            - NOTIFICATIONTEMPLATE_ALREADY_EXISTS
            - NO_ADMIN_ROLES_FOR_CUG_DEFINED
            - CUG_WITHOUT_LOCALE
            - VIRTUAL_IDENTITY_ID_NOT_SPECIFIED
            - MIGRATION_REPORT_DOES_NOT_EXISTS
            - ERROR_CALLING_REST_SERVICE
            - CANNOT_CHANGE_MULTIREGISTRATION_PROPERTY_OF_COMP_ENT
            - REFERENCE_TO_BASIC_ENTITLEMENT_DOES_NOT_EXISTS
            - NON_EXISTING_SYSTEM_PROPERTY
            - NON_EXISTING_ORGANIATION
            - NON_EXISTING_VIRTUAL_IDENTITY
            - PROPERTY_VALUE_ALREADY_EXISTS
            - WRONG_DEFAULT_EXPRESSION_FOR_CONCEPT
            - CHANGE_PASSWORD_EMPTY_RESULT
            - CHANGE_PASSWORD_ERROR
            - PASSWORD_NOT_VALID
            - NO_ACTIVE_PASSWORD_ENABLED_ACCOUNT_FOUND
            - ACCOUNT_ALREADY_EXISTS_FOR_ANOTHER_USER
            - ACCOUNT_ALREADY_EXISTS
        parameters:
          type: array
          items:
            type: object
        webIdmExceptions:
          type: array
          items:
            $ref: "#/components/schemas/WebIdmException"
        message:
          type: string
          readOnly: true
        localizedMessage:
          type: string
        suppressed:
          type: array
          items:
            $ref: "#/components/schemas/Throwable"
    OrganisationAdministrator:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        entitlementName:
          type: string
        entitlementDisplayName:
          type: string
        entitlementWuuid:
          type: string
        context:
          type: string
        telephoneNumber:
          type: string
        emailAddress:
          type: string
    OrganisationWrapper:
      type: object
      properties:
        cugCode:
          type: string
        organisationCode:
          type: string
        name:
          type: string
        metadata:
          type: string
        parentOrganisationCode:
          type: string
        kboNumber:
          type: string
        propertyMap:
          type: object
          additionalProperties:
            type: string
    ProvisionWrapper:
      type: object
      properties:
        timeBeforeIdsFetched:
          type: integer
          format: int64
        ids:
          type: array
          items:
            type: string
    ProvisionResult:
      type: object
      properties:
        timeProvisioningStarted:
          type: integer
          format: int64
        status:
          type: string
        situation:
          type: string
        targetSystem:
          type: string
        accountType:
          type: string
        subStatus:
          type: string
        error:
          type: string
    TargetSystemStatus:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        enabled:
          type: boolean
        ok:
          type: boolean
        config:
          type: string
        error:
          type: string
        objectTypes:
          type: array
          items:
            type: string
        connectorRef:
          type: object
          additionalProperties:
            type: string
    ProxyConfig:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
        urlContext:
          type: string
        forwardURL:
          type: string
        proxyServerUrl:
          type: string
        keyStoreLocation:
          type: string
        keyStorePassword:
          type: string
        status:
          type: string
        debug:
          type: string
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    LeadingPersonActionParams:
      type: object
      properties:
        targetSystem:
          type: string
        accountType:
          type: string
        emailRecipients:
          type: string
        identityUuid:
          type: string
        identificationData:
          type: string
        rrn:
          type: string
    CugMapping:
      type: object
      properties:
        targetCugCode:
          type: string
        tagClusterMappings:
          type: object
          additionalProperties:
            type: string
        tagMappings:
          type: object
          additionalProperties:
            type: string
        compositeEntitlementMappings:
          type: object
          additionalProperties:
            type: string
        contextMapping:
          type: object
          additionalProperties:
            type: string
        defaultTagValues:
          type: object
          additionalProperties:
            type: string
        defaultContextValues:
          type: object
          additionalProperties:
            type: string
    SynctoolActionParams:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
        identityUuid:
          type: string
        host:
          type: string
        port:
          type: string
        targetDirectory:
          type: string
        cugCode:
          type: string
        identificationData:
          type: string
        emailRecipients:
          type: string
        historyDirectory:
          type: string
        rrn:
          type: string
        enableCrossCugFunctionality:
          type: boolean
        exchangeDirectory:
          type: string
        cugMappings:
          type: array
          items:
            $ref: "#/components/schemas/CugMapping"
    SyncFtpSettings:
      type: object
      required:
        - host
        - password
        - port
        - targetDirectory
        - userName
      properties:
        userName:
          type: string
        password:
          type: string
        host:
          type: string
        port:
          type: string
        targetDirectory:
          type: string
    VlimpersFtpSettings:
      type: object
      required:
        - destinationPath
        - host
        - user
      properties:
        host:
          type: string
        port:
          type: integer
          format: int32
          minimum: 0
        user:
          type: string
        destinationPath:
          type: string
        privateCertificatePath:
          type: string
    VlimpersSyncActionParams:
      type: object
      required:
        - historyFolder
        - mailFrom
        - mailTo
        - syncFtpSettings
        - vlimpersFtpSettings
      properties:
        historyFolder:
          type: string
        mailTo:
          type: string
        mailFrom:
          type: string
        numberOfVlimpersFiles:
          type: integer
          format: int32
          minimum: 0
        maxDiff:
          type: integer
          format: int32
          minimum: 1
        syncFtpSettings:
          $ref: "#/components/schemas/SyncFtpSettings"
        vlimpersFtpSettings:
          $ref: "#/components/schemas/VlimpersFtpSettings"
        columnsToIgnore:
          type: array
          items:
            type: string
    MarkForProvisioningSearchCriteria:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sortDirection:
          type: string
        sortProperty:
          type: string
        advanced:
          type: boolean
        synctoolExport:
          type: boolean
        startStartDate:
          type: integer
          format: int32
        endStartDate:
          type: integer
          format: int32
        startEndDate:
          type: integer
          format: int32
        endEndDate:
          type: integer
          format: int32
        needsProvisioning:
          type: boolean
    Scheduler:
      type: object
      required:
        - actionParameters
        - cronExpression
        - name
        - searchParameters
        - type
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        searchParameters:
          type: string
        actionParameters:
          type: string
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - VLIMPERS_SYNC
            - SYNCTOOL
            - NOTIFICATION
            - DEFAULTENTITLEMENT
            - EXPIRE_WORKRELATION
            - EXPIRE_ENTITLEMENT
            - EXPIRE_ENTITLEMENT_SUMMARY
            - OPEN_TASKS
            - OPEN_TASKS_MERGED
            - MAGDA_SYNC
            - SELF_REQUESTS_OPEN_TASKS
            - SELF_REQUESTS_WAIT_TOO_LONG
            - PING_TARGETSYSTEMS
            - MARK_FOR_PROVISIONING
            - LEADING_PERSON
            - CONCEPTS_REPORT
        active:
          type: boolean
        cronExpression:
          type: string
        lastTimeRun:
          type: string
          format: date-time
        nextTimeScheduled:
          type: string
          format: date-time
        state:
          type: string
    SystemProperty:
      type: object
      required:
        - name
        - value
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
    Message:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    AccountStatus:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        id:
          type: integer
          format: int64
          readOnly: true
        virtualIdentity:
          $ref: "#/components/schemas/VirtualIdentity"
        targetSystem:
          $ref: "#/components/schemas/TargetSystem"
        accountType:
          $ref: "#/components/schemas/AccountType"
        accountId:
          type: string
        accountStatusValue:
          type: string
          enum:
            - SUCCESS
            - ERROR
            - SKIPPED
            - FAILED
            - INITALIZED
            - MIGRATED
        situation:
          type: string
        subStatus:
          type: string
        error:
          type: string
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    VirtualIdentityWrapper:
      type: object
      properties:
        cugName:
          type: string
        source:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        enrichWithVKBP:
          type: boolean
    Person:
      type: object
      properties:
        virtualIdentityWuuid:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        reason:
          type: string
        birthDate:
          type: string
          format: date-time
        gender:
          type: string
        initials:
          type: string
        ssn:
          type: string
    VirtualIdentitySearchCriteria:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sortDirection:
          type: string
        sortProperty:
          type: string
        advanced:
          type: boolean
        synctoolExport:
          type: boolean
        lastModificationDate:
          type: string
          format: date-time
        lastModificationDateTo:
          type: string
          format: date-time
        lastModificationDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        lastModifiedBy:
          type: string
        lastModifiedByOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        creationDate:
          type: string
          format: date-time
        creationDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        createdBy:
          type: string
        createdByOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        cugCode:
          type: string
        firstname:
          type: string
        firstnameOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        lastname:
          type: string
        lastnameOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        appellation:
          type: string
        appellationOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        gender:
          type: string
        organisationUuid:
          type: string
        dateofbirth:
          type: string
          format: date-time
        status:
          type: string
        accountId:
          type: string
        ssn:
          type: string
        accountIdOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        searchField:
          type: string
    WorkRelationSearchCriteria:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sortDirection:
          type: string
        sortProperty:
          type: string
        advanced:
          type: boolean
        synctoolExport:
          type: boolean
        lastModificationDate:
          type: string
          format: date-time
        lastModificationDateTo:
          type: string
          format: date-time
        lastModificationDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        lastModifiedBy:
          type: string
        lastModifiedByOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        creationDate:
          type: string
          format: date-time
        creationDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        createdBy:
          type: string
        createdByOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        cugCode:
          type: string
        searchTerm:
          type: string
        organisationCodes:
          type: array
          items:
            type: string
        organisationUuids:
          type: array
          items:
            type: string
        organisationUuid:
          type: string
        virtualIdentityWuuid:
          type: string
        excludedEntitlementName:
          type: string
        organisationTypes:
          type: array
          items:
            type: string
        tagUuids:
          type: array
          items:
            type: string
        endDateDaysFromNow:
          type: integer
          format: int32
        endDate:
          type: string
          format: date-time
        endDateTo:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        startDateTo:
          type: string
          format: date-time
        startDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        endDateOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        contextValues:
          type: array
          items:
            type: string
        firstname:
          type: string
        firstnameOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
        lastname:
          type: string
        lastnameOperation:
          type: string
          enum:
            - EQUALS
            - STARTS_WITH
            - CONTAINS
            - GREATER
            - LOWER
            - GREATER_OR_EQUALS
            - LOWER_OR_EQUALS
            - BETWEEN
    WorkRelationWrapper:
      type: object
      properties:
        cugCode:
          type: string
        identificationNumber:
          type: string
        virtualIdentityWuuid:
          type: string
        organisationCode:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        tags:
          type: object
          additionalProperties:
            type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        source:
          type: string
    PersonWithWorkRelationSearchResult:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        numberOfElementsOnCurrentPage:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        personWithWorkrelations:
          type: array
          items:
            $ref: "#/components/schemas/PersonWithWorkrelation"
    PersonWithWorkrelation:
      type: object
      properties:
        person:
          $ref: "#/components/schemas/Person"
        workRelation:
          $ref: "#/components/schemas/WorkRelationDto"
    TagClusterSelection:
      type: object
      properties:
        clusterName:
          type: string
        maxSelect:
          type: integer
          format: int32
        minSelect:
          type: integer
          format: int32
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagWithProperty"
    TagWithProperty:
      type: object
      properties:
        name:
          type: string
        wuuid:
          type: string
        defaultSelected:
          type: boolean
        propertyDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/PropertyDefinition"
    WorkRelationDto:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
        cugTags:
          type: array
          items:
            $ref: "#/components/schemas/TagClusterSelection"
        properties:
          type: object
          additionalProperties:
            type: string
        virtualIdentityWuuid:
          type: string
        workrelationWuuid:
          type: string
        tagNames:
          type: string
        reason:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        organisationCode:
          type: string
        organisationName:
          type: string
        shortName:
          type: string
        socialName:
          type: string
    WorkflowRequestWithoutSerializedConcept:
      type: object
      properties:
        conceptType:
          type: string
          enum:
            - "NULL"
            - IDENTITY
            - VIRTUALIDENTITY
            - CUG
            - WORKRELATION
            - ORGANISATION
            - ORGANISATIONTYPE
            - ORGANISATIONTYPEASSIGNMENT
            - TAG
            - TAGCLUSTER
            - BASICENTITLEMENT
            - COMPOSITEENTITLEMENT
            - ENTITLEMENTREGISTRATION
            - ENTITLEMENTASSIGNMENT
            - TARGETSYSTEM
            - SELFREQUEST
            - APPLICATIONNUMBER
            - ALL
        id:
          type: integer
          format: int64
        conceptWuuid:
          type: string
        notifyReason:
          type: boolean
        orgCode:
          type: string
        cugCode:
          type: string
        context:
          type: string
        conceptAction:
          type: string
          enum:
            - CREATE
            - UPDATE
            - LIST
            - DELETE
            - ARCHIVE
            - VALIDATE
            - SEARCH
        workflowId:
          type: string
        workflowStatus:
          type: string
          enum:
            - APPROVED
            - REJECTED
            - CANCELLED
            - ERROR
        requestStatus:
          type: string
          enum:
            - WAITING
            - STARTED
            - FINISHED
            - PROCESSING
        creationReason:
          type: string
        createdBy:
          type: string
        creationDate:
          type: string
          format: date-time
    WorkflowTaskWrapper:
      type: object
      properties:
        taskId:
          type: string
        workflowRequest:
          $ref: "#/components/schemas/WorkflowRequestWithoutSerializedConcept"
        assignee:
          type: string
        owner:
          type: string
        reserved:
          type: boolean
    WorkflowApproval:
      type: object
      properties:
        workflowRequestId:
          type: string
        taskId:
          type: string
        approverUuid:
          type: string
        approved:
          type: boolean
    WorkflowRequest:
      type: object
      properties:
        marshaledRoles:
          type: string
        migrated:
          type: boolean
        creationDate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastModificationDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        creationReason:
          type: string
          minLength: 0
          maxLength: 255
        modificationReason:
          type: string
          minLength: 0
          maxLength: 255
        conceptType:
          type: string
          enum:
            - "NULL"
            - IDENTITY
            - VIRTUALIDENTITY
            - CUG
            - WORKRELATION
            - ORGANISATION
            - ORGANISATIONTYPE
            - ORGANISATIONTYPEASSIGNMENT
            - TAG
            - TAGCLUSTER
            - BASICENTITLEMENT
            - COMPOSITEENTITLEMENT
            - ENTITLEMENTREGISTRATION
            - ENTITLEMENTASSIGNMENT
            - TARGETSYSTEM
            - SELFREQUEST
            - APPLICATIONNUMBER
            - ALL
        id:
          type: integer
          format: int64
        conceptWuuid:
          type: string
        notifyReason:
          type: boolean
        orgCode:
          type: string
        cugCode:
          type: string
        context:
          type: string
        userRolesContent:
          type: string
        conceptAction:
          type: string
          enum:
            - CREATE
            - UPDATE
            - LIST
            - DELETE
            - ARCHIVE
            - VALIDATE
            - SEARCH
        workflowId:
          type: string
        workflowStatus:
          type: string
          enum:
            - APPROVED
            - REJECTED
            - CANCELLED
            - ERROR
        requestStatus:
          type: string
          enum:
            - WAITING
            - STARTED
            - FINISHED
            - PROCESSING
        content:
          type: string
        errorCode:
          type: string
          enum:
            - SETTINGS_NOT_FOUND
            - APPROVERS_NOT_FOUND
            - INVALID_CONCEPT_UUID
            - SYSTEM_ERROR
        errorMessage:
          type: string
        creationDateFormatted:
          type: string
          readOnly: true
        lastModificationDateFormatted:
          type: string
          readOnly: true
    ContextProperty:
      type: object
      properties:
        contextPropertyType:
          type: string
          enum:
            - TEXT
            - MULTISELECT
            - DROPDOWN
            - DCB_PANEL
        required:
          type: boolean
        name:
          type: string
        propertyDefinitionId:
          type: string
        choices:
          type: array
          items:
            $ref: "#/components/schemas/EntitlementContextValue"
        value:
          type: string
        values:
          type: array
          uniqueItems: true
          items:
            type: string
    EntitlementDto:
      type: object
      properties:
        contextProperties:
          type: array
          items:
            $ref: "#/components/schemas/ContextProperty"
        entitlementRegistrationWuuid:
          type: string
        displayName:
          type: string
        entitlementName:
          type: string
        description:
          type: string
        compositeEntitlementWuuid:
          type: string
        workrelationWuuid:
          type: string
        period:
          $ref: "#/components/schemas/Period"
        reason:
          type: string
        showMaster:
          type: boolean
        masterEnabled:
          type: boolean
        master:
          type: boolean
    PersonSearchResult:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        currentPage:
          type: integer
          format: int32
        numberOfElementsOnCurrentPage:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        persons:
          type: array
          items:
            $ref: "#/components/schemas/Person"
    AccountChanged:
      type: object
      properties:
        targetSystemName:
          type: string
        accountType:
          type: string
        changed:
          type: boolean
    AccountsWherePasswordChangedFor:
      type: object
      properties:
        accountsWherePasswordIsChangedFor:
          type: array
          items:
            $ref: "#/components/schemas/AccountChanged"
    Account:
      type: object
      properties:
        targetSystemName:
          type: string
        accountTypeName:
          type: string
    ChangePassword:
      type: object
      required:
        - passwordValue
      properties:
        passwordValue:
          type: string
        targetSystemIdentifier:
          type: string
        virtualIdentityIdentifier:
          type: string
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
    FrontendPasswordRule:
      type: object
      properties:
        regex:
          type: string
        name:
          type: string
        parameter:
          type: string
    FrontendPasswordRules:
      type: object
      properties:
        targetSystemUuid:
          type: string
        frontendPasswordRules:
          type: array
          items:
            $ref: "#/components/schemas/FrontendPasswordRule"
    RestProvisioningFieldExclusionConfiguration:
      type: object
      properties:
        identifier:
          type: integer
          format: int64
        conceptType:
          type: string
        fieldName:
          type: string